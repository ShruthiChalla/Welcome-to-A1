{
  "hash": "2f856ad842e5c0d1c44edc52b2ff9a03",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A2 Map Dataset\"\nauthor: \"Swetha, Shruthi\"\ndate: \"2025-10-18\"\ncategories: [Crane Mangolia]\nformat: html\n---\n\nThis dataset explores the migration patterns of Cranes in and across Mangolia. The dataset contains various attributes includes the longitude and latitude positions of the cranes documented along their migration which we can use to better understand and track their migration patterns at certain times of the year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'rnaturalearthdata'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n```\n\n\n:::\n\n```{.r .cell-code}\n# Run this in your console first\n# devtools::install_github(\"ropensci/rnaturalearthhires\")\nlibrary(rnaturalearthhires)\n\n# Plotting Maps\nlibrary(tidyverse) # Maps using ggplot() + geom_sf()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggformula) # Maps using gf_sf()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n\tlearnr::run_tutorial(\"introduction\", package = \"ggformula\")\n\tlearnr::run_tutorial(\"refining\", package = \"ggformula\")\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tmap) # Thematic Maps, static and interactive\nlibrary(tmaptools)\nlibrary(tmap.mapgl)\nlibrary(osmdata) # Fetch map data from osmdata.org\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(sfheaders) # Handcrafted Map data\n## Interactive Maps\nlibrary(leaflet) # interactive Maps\nlibrary(leaflet)\nlibrary(leaflet.providers)\nlibrary(leaflet.extras)\nlibrary(threejs) # Globe maps in R. Part of the htmlwidgets family of packages\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: igraph\n\nAttaching package: 'igraph'\n\nThe following objects are masked from 'package:lubridate':\n\n    %--%, union\n\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n\nThe following object is masked from 'package:tidyr':\n\n    crossing\n\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\nThe following object is masked from 'package:base':\n\n    union\n```\n\n\n:::\n\n```{.r .cell-code}\n# For Spatial Data Frame Processing\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.13.1, GDAL 3.11.0, PROJ 9.6.0; sf_use_s2() is TRUE\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncranes <- readr::read_csv(\"cranesmangolia.csv\") %>% \njanitor::clean_names(case=\"snake\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 22549 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): sensor-type, individual-taxon-canonical-name, individual-local-id...\ndbl  (10): event-id, location-long, location-lat, comments, gps:satellite-co...\nlgl   (2): visible, manually-marked-outlier\ntime  (1): timestamp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ncranes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 22,549 × 17\n     event_id visible timestamp location_long location_lat comments\n        <dbl> <lgl>   <time>            <dbl>        <dbl>    <dbl>\n 1 8087306349 TRUE    33:25              111.         48.5     1295\n 2 8087306348 TRUE    55:23              111.         48.5     1296\n 3 8087306347 TRUE    13:05              111.         48.5     1297\n 4 8087306346 TRUE    33:50              111.         48.5     1298\n 5 8087306345 TRUE    17:32              111.         48.5     1299\n 6 8087306344 TRUE    33:10              111.         48.5     1300\n 7 8087306355 TRUE    55:49              111.         48.5     1315\n 8 8087306354 TRUE    16:15              111.         48.5     1316\n 9 8087306353 TRUE    21:47              111.         48.5     1317\n10 8087306352 TRUE    41:55              111.         48.5     1318\n# ℹ 22,539 more rows\n# ℹ 11 more variables: gps_satellite_count <dbl>, ground_speed <dbl>,\n#   heading <dbl>, height_above_ellipsoid <dbl>, manually_marked_outlier <lgl>,\n#   tag_voltage <dbl>, sensor_type <chr>,\n#   individual_taxon_canonical_name <chr>, tag_local_identifier <dbl>,\n#   individual_local_identifier <chr>, study_name <chr>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(cranes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 22,549\nColumns: 17\n$ event_id                        <dbl> 8087306349, 8087306348, 8087306347, 80…\n$ visible                         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR…\n$ timestamp                       <time> 33:25:00, 55:23:00, 13:05:00, 33:50:0…\n$ location_long                   <dbl> 110.9471, 110.9450, 110.9417, 110.9397…\n$ location_lat                    <dbl> 48.47527, 48.47613, 48.47745, 48.47777…\n$ comments                        <dbl> 1295, 1296, 1297, 1298, 1299, 1300, 13…\n$ gps_satellite_count             <dbl> 5, 5, 6, 7, 8, 6, 8, 6, 8, 7, 6, 7, 7,…\n$ ground_speed                    <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ heading                         <dbl> 35, 27, 20, 29, 26, 53, 103, 30, 35, 4…\n$ height_above_ellipsoid          <dbl> 979, 995, 1048, 1038, 1092, 1077, 976,…\n$ manually_marked_outlier         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ tag_voltage                     <dbl> 1271, 1270, 1273, 1272, 1272, 1269, 12…\n$ sensor_type                     <chr> \"gps\", \"gps\", \"gps\", \"gps\", \"gps\", \"gp…\n$ individual_taxon_canonical_name <chr> \"Anthropoides virgo\", \"Anthropoides vi…\n$ tag_local_identifier            <dbl> 6235, 6235, 6235, 6235, 6235, 6235, 62…\n$ individual_local_identifier     <chr> \"H78-6235\", \"H78-6235\", \"H78-6235\", \"H…\n$ study_name                      <chr> \"1000 Cranes. Mongolia.\", \"1000 Cranes…\n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrane_location <- cranes %>%\n  select(location_long,location_lat)\n\nglimpse(crane_location)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 22,549\nColumns: 2\n$ location_long <dbl> 110.9471, 110.9450, 110.9417, 110.9397, 110.9376, 110.93…\n$ location_lat  <dbl> 48.47527, 48.47613, 48.47745, 48.47777, 48.48185, 48.483…\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisdat::vis_miss(crane_location)\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://boundingbox.klokantech.com/ CSV:\nbbox_1 <- matrix(c(65.3,19.2,122.0,53.8), byrow = FALSE, nrow = 2,\n    ncol = 2, dimnames = list(c(\"x\", \"y\"), c(\"min\", \"max\")))\nbbox_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   min   max\nx 65.3 122.0\ny 19.2  53.8\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncranes_sf <- st_as_sf(cranes,\n                      coords = c(\"location_long\", \"location_lat\"),  # check column names\n                      crs = 4326)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry(cranes_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 22549 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 30.87936 ymin: -24.45136 xmax: 119.1636 ymax: 53.10805\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (110.9471 48.47527)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (110.945 48.47613)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (110.9417 48.47745)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (110.9397 48.47777)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (110.9376 48.48185)\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncraneslines <- st_read(\"lines.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `lines' from data source \n  `C:\\Users\\Shruthi\\Documents\\Fundamentals of Statistical Analysis Studio\\posts\\Welcome to A1\\posts\\A2 Assignment\\EDA-Cranes\\Cranes\\lines.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 13 features and 1 field\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 30.87936 ymin: -24.45136 xmax: 119.1636 ymax: 53.10805\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncranespoints <- st_read(\"points.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `points' from data source \n  `C:\\Users\\Shruthi\\Documents\\Fundamentals of Statistical Analysis Studio\\posts\\Welcome to A1\\posts\\A2 Assignment\\EDA-Cranes\\Cranes\\points.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 22549 features and 17 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 30.87936 ymin: -24.45136 xmax: 119.1636 ymax: 53.10805\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmigration_countries_1 <- World %>%\n  filter(iso_a3 %in% c(\n    \"AFG\", \"CHN\", \"IND\", \"KAZ\", \"KGZ\", \n    \"MNG\", \"NPL\", \"PAK\", \"RUS\", \"TUR\", \n    \"TKM\", \"UZB\"\n  ))\n\n# Plot with gf\ngf_sf(migration_countries_1, fill = \"grey\", color = \"black\") %>%\n  gf_point(data = cranes, location_lat ~ location_long, color = \"violet\", size = 1) %>%\n  gf_labs(\n    title = \"Demoiselle Crane Migration Countries and Locations\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmigration_countries <- World %>%\n  filter(iso_a3 %in% c(\n    \"AFG\", \"CHN\", \"IND\", \"KAZ\", \"KGZ\", \n    \"MNG\", \"NPL\", \"PAK\", \"TUR\", \n    \"TKM\", \"UZB\"\n  ))\n\n# Plot with gf\ngf_sf(migration_countries, fill = \"grey\", color = \"black\") %>%\n  gf_point(data = cranes, location_lat ~ location_long, color = \"violet\", size = 1) %>%\n  gf_labs(\n    title = \"Zoom in -Demoiselle Crane Migration Countries and Locations\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_sf(migration_countries, fill = \"grey\", color = \"black\") %>%\ngf_sf(data = craneslines, geometry = ~geometry, color = \"darkblue\", linewidth = 0.05) %>%\n  gf_sf(data = cranespoints, geometry = ~geometry, color = \"lightblue\", alpha = 0.2, size = 0.5) %>%\n  gf_theme(axis.text.x = element_text(angle = 45, hjust = 2)) %>%\n  gf_labs(\n    title = \"CDemoiselle Crane Migration Countries and Locations \",\n    subtitle = \"Cranes Mangolia Study Source: Movebank\"\n  )\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n- Inference\n1. Demoiselle Cranes move from northern Central Asia to South Asia. Most fixes cluster around Mongolia, China, and India. One outlier is far south.\n\n2. The biggest crowd of cranes is in India. Probably they go there during winter season.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_sf(migration_countries, fill = \"grey\", color = \"black\") %>%\n  gf_sf(data = craneslines, geometry = ~geometry, color = \"white\", linewidth = 0.05) %>%\n  gf_point(data = cranes, location_lat ~ location_long, color = ~ground_speed, size = 0.5) %>%\n  gf_labs(\n    title = \"Demoiselle Crane Migration with Ground Speed\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    color = \"Ground Speed (m/s)\"\n  )\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n-Inference\n1. The color of the dots shows their ground speed. Darker colors represents slower speed, and lighter shades represents faster speed.\n\n2. Most points are in darker shades. Thus, the cranes usually fly at slower speeds during migration.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_sf(migration_countries, fill = \"grey\", color = \"black\") %>%\n  gf_sf(data = craneslines, geometry = ~geometry, color = \"white\", linewidth = 0.05) %>%\ngf_point(data = cranes, location_lat ~ location_long, color = ~height_above_ellipsoid) %>% \n    gf_labs(\n    title = \"Demoiselle Crane Migration with Height\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    color = \"GHeight above ellipsoid\"\n  )\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n-Inference\n1. They seems to fly high when they have to cross mountain otherwise, they fly flat and slow probably to save energy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_sf(migration_countries, fill = \"grey\", color = \"black\") %>%\n  gf_point(data = cranes,location_lat ~ location_long, color = ~individual_local_identifier , size = 1)\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_sf(migration_countries, fill = \"white\", color = \"black\") %>%\n  gf_line(data = cranes, location_lat ~ location_long, color = ~individual_local_identifier) %>%\n    gf_point(data = cranes,location_lat ~ location_long, color = \"black\" , size = 0.2)\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(craneslines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 13 features and 1 field\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 30.87936 ymin: -24.45136 xmax: 119.1636 ymax: 53.10805\nGeodetic CRS:  WGS 84\nFirst 10 features:\n            name                       geometry\n1  H78-6235-6235 LINESTRING (110.9471 48.475...\n2  H17-6330-6330 LINESTRING (111.2796 48.387...\n3  H23-6272-6272 LINESTRING (110.1984 48.282...\n4  H29-6269-6269 LINESTRING (111.0704 48.324...\n5  H25-6282-6282 LINESTRING (110.1866 48.291...\n6  H34-6327-6327 LINESTRING (110.0162 48.171...\n7  H24-6239-6239 LINESTRING (110.1877 48.286...\n8  H13-6280-6280 LINESTRING (110.1201 41.511...\n9  H33-6233-6233 LINESTRING (110.1599 47.502...\n10 H71-6237-6237 LINESTRING (110.5617 48.341...\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(craneslines)\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n-Inferences\n1. Most cranes travel together.\n\n2. Each color is a different bird.\n\n3. Some birds take slightly different paths.\n\n4. A few birds stop at different places.\n",
    "supporting": [
      "maps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
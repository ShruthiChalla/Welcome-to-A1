{
  "hash": "3d04a912f5b8f7911666464c61e25a8e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EDA-Cuisines\"\nauthor: \"Shruthi Challa, Swetha\"\ndate: \"2025-10-13\"\ncategories: [Dishes from across the Globe]\nformat: html\n---\n\n### [**The Cuisines Dataset**]{.underline}\n\nThe Cuisines dataset from the tastyR package explores different dish recepies that have been published by authors on their blogs from across the globe. It looks at each dishes features, from it ingredients and calorie contents to ratings and reviews.\n\n#### How could the experiment have taken place?\n\nThis dataset was likely collected as part of an experiment aimed at analyzing global recipes to understand cross-cultural variations in food preparation, nutrition, and popularity. After narrowing down on the objective, Recipes were gathered from online recipe-sharing blogs and platforms, different parameters to analyzing the dishes were identified including **Identification variables, Nutritional data,** **User engagement metrics**, **Preparation variables, Textual data**. Researchers captured details such as cuisine type, ingredients, author, nutritional values (calories, fat, carbs, protein), and user engagement metrics (ratings and reviews). Additional information on preparation and cooking times were also included to possibly assess effort and complexity. After collecting the data, some variables were also derived from the collected data such as average rating and total cook time before publishing it in a tabular format. It's a dataset that allows us to compare recipes from different regions and test relationships between nutritional profiles, cooking characteristics, and audience preferences.\n\n#### Summary of Findings\n\nNorth American and European dishes tend to be higher in calories and fat, while Asian cuisines are significantly lighter, with fat content rather than protein being the primary driver of calorie counts. The data also shows stark regional differences in user engagement, with North American dishes dominating ratings and reviews\n\n[**Set Up**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Setup\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Our trusted friend\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula) # Formula interface to ggplot2\nlibrary(vcd) # Michael Friendly's package, Visualizing Categorical\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: grid\n\nAttaching package: 'vcd'\n\nThe following object is masked from 'package:mosaic':\n\n    mplot\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(vcdExtra) # Categorical Data Sets\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: gnm\n\nAttaching package: 'gnm'\n\nThe following object is masked from 'package:lattice':\n\n    barley\n\n\nAttaching package: 'vcdExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    summarise\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(resampledata) # More datasets\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:vcdExtra':\n\n    TV\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visStatistics) # Comprehensive all-in-one stats viz/test package\nlibrary(ggmosaic) # Tidy Mosaic Plots\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'ggmosaic'\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggpubr) # Colours, Themes and new geometries in ggplot\n##\nlibrary(GGally) # Corr plots\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'GGally'\n\nThe following object is masked from 'package:ggmosaic':\n\n    happy\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom) # Clean reports from Stats / ML outputs\n\n# library(devtools)\n# devtools::install_github(\"rpruim/Lock5withR\")\nlibrary(easystats) # Easy Statistical Analysis and Charts\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n# Attaching packages: easystats 0.7.5\n✔ bayestestR  0.17.0   ✔ correlation 0.8.8 \n✔ datawizard  1.3.0    ✔ effectsize  1.0.1 \n✔ insight     1.4.2    ✔ modelbased  0.13.0\n✔ performance 0.15.2   ✔ parameters  0.28.2\n✔ report      0.6.1    ✔ see         0.12.0\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(correlation) # Different Types of Correlations\n##\nlibrary(janitor) # Data Cleaning and Tidying\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n\nThe following object is masked from 'package:insight':\n\n    clean_names\n\nThe following objects are masked from 'package:datawizard':\n\n    remove_empty, remove_empty_rows\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visdat) # Visualize whole dataframes for missing data\nlibrary(naniar) # Clean missing data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'naniar'\n\nThe following object is masked from 'package:skimr':\n\n    n_complete\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(DT) # Interactive Tables for our data\nlibrary(tinytable) # Elegant Tables for our data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tinytable'\n\nThe following object is masked from 'package:ggplot2':\n\n    theme_void\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel) # Repelling Text Labels in ggplot\nlibrary(marquee) # Marquee Text in ggplot\n##\nlibrary(CardioDataSets)\nlibrary(DataSetsVerse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: timeSeriesDataSets\nLoading required package: educationR\nLoading required package: crimedatasets\nLoading required package: MedDataSets\nLoading required package: OncoDataSets\n═══════════════════════════ Welcome to DataSetsVerse ═══════════════════════════\nA metapackage for thematic and domain-specific datasets in R.\n\n✔ timeSeriesDataSets v0.1.0\n✔ educationR         v0.1.0\n✔ crimedatasets      v0.1.0\n✔ MedDataSets        v0.1.0\n✔ OncoDataSets       v0.1.0\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tastyR)\n```\n:::\n\n\n[**Finding Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(package = \"tastyR\")\n```\n:::\n\n\n[**Read Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Getting the Data\nclass(cuisines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n```\n\n\n:::\n\n```{.r .cell-code}\ncuisines\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,218 × 17\n   name     country url   author date_published ingredients calories   fat carbs\n   <chr>    <chr>   <chr> <chr>  <date>         <chr>          <dbl> <dbl> <dbl>\n 1 Saganak… Greek   http… John … 2024-02-07     1 (4 ounce…      391    25    15\n 2 Coney I… Jewish  http… John … 2024-11-26     2 ¾ cups a…      301    17    31\n 3 Diana's… Austra… http… CHIPP… 2022-07-14     1 ½ cups w…       64     3     9\n 4 Chilean… Chilean http… Heidi  2025-01-31     ½ cup chop…      106     9     7\n 5 Tex-Mex… Tex-Mex http… Ann    2025-02-18     2 cups all…      449    23    58\n 6 Newfoun… Canadi… http… MomWh… 2022-08-12     1 (3 pound…      958    24   144\n 7 Pasta e… Italian http… Buckw… 2023-12-12     1 cup dry …      378    10    59\n 8 Danish … Danish  http… TheOt… 2020-06-19     4 cups all…       90     5    10\n 9 Lemon P… Amish … http… Laura… 2025-01-21     2 cups all…      157     6    25\n10 Pan con… Spanish http… Luis … 2025-06-02     1 large to…      322    16    39\n# ℹ 2,208 more rows\n# ℹ 8 more variables: protein <dbl>, avg_rating <dbl>, total_ratings <dbl>,\n#   reviews <dbl>, prep_time <dbl>, cook_time <dbl>, total_time <dbl>,\n#   servings <dbl>\n```\n\n\n:::\n:::\n\n\n[**Inspect Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Inspecting the Data\nbase::names(cuisines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"name\"           \"country\"        \"url\"            \"author\"        \n [5] \"date_published\" \"ingredients\"    \"calories\"       \"fat\"           \n [9] \"carbs\"          \"protein\"        \"avg_rating\"     \"total_ratings\" \n[13] \"reviews\"        \"prep_time\"      \"cook_time\"      \"total_time\"    \n[17] \"servings\"      \n```\n\n\n:::\n\n```{.r .cell-code}\ndplyr::glimpse(cuisines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,218\nColumns: 17\n$ name           <chr> \"Saganaki (Flaming Greek Cheese)\", \"Coney Island Knishe…\n$ country        <chr> \"Greek\", \"Jewish\", \"Australian and New Zealander\", \"Chi…\n$ url            <chr> \"https://www.allrecipes.com/recipe/263750/flaming-greek…\n$ author         <chr> \"John Mitzewich\", \"John Mitzewich\", \"CHIPPENDALE\", \"Hei…\n$ date_published <date> 2024-02-07, 2024-11-26, 2022-07-14, 2025-01-31, 2025-0…\n$ ingredients    <chr> \"1 (4 ounce) package kasseri cheese, 1 tablespoon water…\n$ calories       <dbl> 391, 301, 64, 106, 449, 958, 378, 90, 157, 322, 4, NA, …\n$ fat            <dbl> 25, 17, 3, 9, 23, 24, 10, 5, 6, 16, 0, NA, 21, 2, 66, 8…\n$ carbs          <dbl> 15, 31, 9, 7, 58, 144, 59, 10, 25, 39, 1, NA, 16, 63, 7…\n$ protein        <dbl> 16, 7, 1, 1, 7, 46, 14, 1, 2, 7, 0, NA, 28, 6, 54, 17, …\n$ avg_rating     <dbl> 4.8, 4.6, 4.3, 5.0, 3.8, 4.4, 4.3, NA, 4.6, 5.0, 4.7, 4…\n$ total_ratings  <dbl> 25, 10, 126, 1, 13, 40, 3, NA, 65, 2, 182, 2, 19, 16, 9…\n$ reviews        <dbl> 22, 9, 104, 1, 11, 32, 3, NA, 55, 2, 138, 2, 15, 16, 84…\n$ prep_time      <dbl> 10, 30, 20, 10, 30, 30, 30, 40, 0, 5, 5, 5, 10, 10, 20,…\n$ cook_time      <dbl> 5, 75, 15, 0, 15, 165, 75, 30, 0, 5, 0, 25, 10, 50, 16,…\n$ total_time     <dbl> 15, 180, 180, 10, 45, 675, 585, 155, 0, 10, 5, 30, 50, …\n$ servings       <dbl> 2, 16, 12, 6, 15, 6, 6, 84, 24, 1, 21, 8, 4, 10, 4, 8, …\n```\n\n\n:::\n\n```{.r .cell-code}\nbase::dim(cuisines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2218   17\n```\n\n\n:::\n\n```{.r .cell-code}\nutils::str(cuisines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [2,218 × 17] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ name          : chr [1:2218] \"Saganaki (Flaming Greek Cheese)\" \"Coney Island Knishes\" \"Diana's Hawaiian Bread Rolls\" \"Chilean Pebre\" ...\n $ country       : chr [1:2218] \"Greek\" \"Jewish\" \"Australian and New Zealander\" \"Chilean\" ...\n $ url           : chr [1:2218] \"https://www.allrecipes.com/recipe/263750/flaming-greek-cheese-saganaki/\" \"https://www.allrecipes.com/recipe/272334/coney-island-knishes/\" \"https://www.allrecipes.com/recipe/22797/dianas-hawaiian-bread-rolls/\" \"https://www.allrecipes.com/recipe/273763/chilean-pebre/\" ...\n $ author        : chr [1:2218] \"John Mitzewich\" \"John Mitzewich\" \"CHIPPENDALE\" \"Heidi\" ...\n $ date_published: Date[1:2218], format: \"2024-02-07\" \"2024-11-26\" ...\n $ ingredients   : chr [1:2218] \"1 (4 ounce) package kasseri cheese, 1 tablespoon water, or as needed, ¼ cup all-purpose flour, or as needed, 1 \"| __truncated__ \"2 ¾ cups all-purpose flour, or more as needed, 1 teaspoon kosher salt, 1 teaspoon baking powder, ½ cup canola o\"| __truncated__ \"1 ½ cups warm water (110 degrees F/45 degrees C), 1  egg, 1 teaspoon salt, 1 teaspoon vanilla extract, 1 teaspo\"| __truncated__ \"½ cup chopped cilantro, ¼ cup olive oil, ¼ cup red wine vinegar, 1  tomato, chopped, 1 small onion, chopped, 1 \"| __truncated__ ...\n $ calories      : num [1:2218] 391 301 64 106 449 958 378 90 157 322 ...\n $ fat           : num [1:2218] 25 17 3 9 23 24 10 5 6 16 ...\n $ carbs         : num [1:2218] 15 31 9 7 58 144 59 10 25 39 ...\n $ protein       : num [1:2218] 16 7 1 1 7 46 14 1 2 7 ...\n $ avg_rating    : num [1:2218] 4.8 4.6 4.3 5 3.8 4.4 4.3 NA 4.6 5 ...\n $ total_ratings : num [1:2218] 25 10 126 1 13 40 3 NA 65 2 ...\n $ reviews       : num [1:2218] 22 9 104 1 11 32 3 NA 55 2 ...\n $ prep_time     : num [1:2218] 10 30 20 10 30 30 30 40 0 5 ...\n $ cook_time     : num [1:2218] 5 75 15 0 15 165 75 30 0 5 ...\n $ total_time    : num [1:2218] 15 180 180 10 45 675 585 155 0 10 ...\n $ servings      : num [1:2218] 2 16 12 6 15 6 6 84 24 1 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   name = col_character(),\n  ..   country = col_character(),\n  ..   url = col_character(),\n  ..   author = col_character(),\n  ..   date_published = col_date(format = \"\"),\n  ..   ingredients = col_character(),\n  ..   calories = col_double(),\n  ..   fat = col_double(),\n  ..   carbs = col_double(),\n  ..   protein = col_double(),\n  ..   avg_rating = col_double(),\n  ..   total_ratings = col_double(),\n  ..   reviews = col_double(),\n  ..   prep_time = col_double(),\n  ..   cook_time = col_double(),\n  ..   total_time = col_double(),\n  ..   servings = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n\n[**Show and Remove Missing Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Raw data visualization\nvisdat::vis_dat(cuisines)\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n[**Cleaning and Munging Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Cleaning the Data\ncuisines_modified <- cuisines %>%\n  janitor::clean_names(case = \"snake\") # clean names\n\ncuisines_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,218 × 17\n   name     country url   author date_published ingredients calories   fat carbs\n   <chr>    <chr>   <chr> <chr>  <date>         <chr>          <dbl> <dbl> <dbl>\n 1 Saganak… Greek   http… John … 2024-02-07     1 (4 ounce…      391    25    15\n 2 Coney I… Jewish  http… John … 2024-11-26     2 ¾ cups a…      301    17    31\n 3 Diana's… Austra… http… CHIPP… 2022-07-14     1 ½ cups w…       64     3     9\n 4 Chilean… Chilean http… Heidi  2025-01-31     ½ cup chop…      106     9     7\n 5 Tex-Mex… Tex-Mex http… Ann    2025-02-18     2 cups all…      449    23    58\n 6 Newfoun… Canadi… http… MomWh… 2022-08-12     1 (3 pound…      958    24   144\n 7 Pasta e… Italian http… Buckw… 2023-12-12     1 cup dry …      378    10    59\n 8 Danish … Danish  http… TheOt… 2020-06-19     4 cups all…       90     5    10\n 9 Lemon P… Amish … http… Laura… 2025-01-21     2 cups all…      157     6    25\n10 Pan con… Spanish http… Luis … 2025-06-02     1 large to…      322    16    39\n# ℹ 2,208 more rows\n# ℹ 8 more variables: protein <dbl>, avg_rating <dbl>, total_ratings <dbl>,\n#   reviews <dbl>, prep_time <dbl>, cook_time <dbl>, total_time <dbl>,\n#   servings <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_clean <- cuisines_modified %>% \ntidyr::drop_na()\ncuisines_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,058 × 17\n   name     country url   author date_published ingredients calories   fat carbs\n   <chr>    <chr>   <chr> <chr>  <date>         <chr>          <dbl> <dbl> <dbl>\n 1 Saganak… Greek   http… John … 2024-02-07     1 (4 ounce…      391    25    15\n 2 Coney I… Jewish  http… John … 2024-11-26     2 ¾ cups a…      301    17    31\n 3 Diana's… Austra… http… CHIPP… 2022-07-14     1 ½ cups w…       64     3     9\n 4 Chilean… Chilean http… Heidi  2025-01-31     ½ cup chop…      106     9     7\n 5 Tex-Mex… Tex-Mex http… Ann    2025-02-18     2 cups all…      449    23    58\n 6 Newfoun… Canadi… http… MomWh… 2022-08-12     1 (3 pound…      958    24   144\n 7 Pasta e… Italian http… Buckw… 2023-12-12     1 cup dry …      378    10    59\n 8 Lemon P… Amish … http… Laura… 2025-01-21     2 cups all…      157     6    25\n 9 Pan con… Spanish http… Luis … 2025-06-02     1 large to…      322    16    39\n10 Traci's… Filipi… http… Traci… 2022-08-28     2 tablespo…        4     0     1\n# ℹ 2,048 more rows\n# ℹ 8 more variables: protein <dbl>, avg_rating <dbl>, total_ratings <dbl>,\n#   reviews <dbl>, prep_time <dbl>, cook_time <dbl>, total_time <dbl>,\n#   servings <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_clean %>% \n  naniar::replace_with_na_all(condition = ~ .x %in% common_na_numbers) %>%\n  replace_with_na_all(condition = ~ .x %in% common_na_strings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,058 × 17\n   name     country url   author date_published ingredients calories   fat carbs\n   <chr>    <chr>   <chr> <chr>  <date>         <chr>          <dbl> <dbl> <dbl>\n 1 Saganak… Greek   http… John … 2024-02-07     1 (4 ounce…      391    25    15\n 2 Coney I… Jewish  http… John … 2024-11-26     2 ¾ cups a…      301    17    31\n 3 Diana's… Austra… http… CHIPP… 2022-07-14     1 ½ cups w…       64     3     9\n 4 Chilean… Chilean http… Heidi  2025-01-31     ½ cup chop…      106     9     7\n 5 Tex-Mex… Tex-Mex http… Ann    2025-02-18     2 cups all…      449    23    58\n 6 Newfoun… Canadi… http… MomWh… 2022-08-12     1 (3 pound…      958    24   144\n 7 Pasta e… Italian http… Buckw… 2023-12-12     1 cup dry …      378    10    59\n 8 Lemon P… Amish … http… Laura… 2025-01-21     2 cups all…      157     6    25\n 9 Pan con… Spanish http… Luis … 2025-06-02     1 large to…      322    16    39\n10 Traci's… Filipi… http… Traci… 2022-08-28     2 tablespo…        4     0     1\n# ℹ 2,048 more rows\n# ℹ 8 more variables: protein <dbl>, avg_rating <dbl>, total_ratings <dbl>,\n#   reviews <dbl>, prep_time <dbl>, cook_time <dbl>, total_time <dbl>,\n#   servings <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ncuisines_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,058 × 17\n   name     country url   author date_published ingredients calories   fat carbs\n   <chr>    <chr>   <chr> <chr>  <date>         <chr>          <dbl> <dbl> <dbl>\n 1 Saganak… Greek   http… John … 2024-02-07     1 (4 ounce…      391    25    15\n 2 Coney I… Jewish  http… John … 2024-11-26     2 ¾ cups a…      301    17    31\n 3 Diana's… Austra… http… CHIPP… 2022-07-14     1 ½ cups w…       64     3     9\n 4 Chilean… Chilean http… Heidi  2025-01-31     ½ cup chop…      106     9     7\n 5 Tex-Mex… Tex-Mex http… Ann    2025-02-18     2 cups all…      449    23    58\n 6 Newfoun… Canadi… http… MomWh… 2022-08-12     1 (3 pound…      958    24   144\n 7 Pasta e… Italian http… Buckw… 2023-12-12     1 cup dry …      378    10    59\n 8 Lemon P… Amish … http… Laura… 2025-01-21     2 cups all…      157     6    25\n 9 Pan con… Spanish http… Luis … 2025-06-02     1 large to…      322    16    39\n10 Traci's… Filipi… http… Traci… 2022-08-28     2 tablespo…        4     0     1\n# ℹ 2,048 more rows\n# ℹ 8 more variables: protein <dbl>, avg_rating <dbl>, total_ratings <dbl>,\n#   reviews <dbl>, prep_time <dbl>, cook_time <dbl>, total_time <dbl>,\n#   servings <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisdat::vis_dat(cuisines_clean)\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_clean2 <- cuisines_clean %>% \n  dplyr::select(-c(url, date_published))\ncuisines_clean2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,058 × 15\n   name       country author ingredients calories   fat carbs protein avg_rating\n   <chr>      <chr>   <chr>  <chr>          <dbl> <dbl> <dbl>   <dbl>      <dbl>\n 1 Saganaki … Greek   John … 1 (4 ounce…      391    25    15      16        4.8\n 2 Coney Isl… Jewish  John … 2 ¾ cups a…      301    17    31       7        4.6\n 3 Diana's H… Austra… CHIPP… 1 ½ cups w…       64     3     9       1        4.3\n 4 Chilean P… Chilean Heidi  ½ cup chop…      106     9     7       1        5  \n 5 Tex-Mex S… Tex-Mex Ann    2 cups all…      449    23    58       7        3.8\n 6 Newfoundl… Canadi… MomWh… 1 (3 pound…      958    24   144      46        4.4\n 7 Pasta e C… Italian Buckw… 1 cup dry …      378    10    59      14        4.3\n 8 Lemon Pop… Amish … Laura… 2 cups all…      157     6    25       2        4.6\n 9 Pan con T… Spanish Luis … 1 large to…      322    16    39       7        5  \n10 Traci's A… Filipi… Traci… 2 tablespo…        4     0     1       0        4.7\n# ℹ 2,048 more rows\n# ℹ 6 more variables: total_ratings <dbl>, reviews <dbl>, prep_time <dbl>,\n#   cook_time <dbl>, total_time <dbl>, servings <dbl>\n```\n\n\n:::\n:::\n\n\n[**Creating a new Column**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Introducing a Continents Column\ncuisines_cleaned <- cuisines_clean2 %>%\nmutate(continent = case_when(\n\n    country %in% c(\"Amish and Mennonite\", \"Cajun and Creole\", \"Canadian\", \n                   \"Soul Food\", \"Southern Recipes\", \"Tex-Mex\") ~ \"North America\",\n    \n    country %in% c(\"Argentinian\", \"Brazilian\", \"Chilean\", \n                   \"Colombian\", \"Peruvian\") ~ \"South America\",\n    \n    country %in% c(\"Austrian\", \"Belgian\", \"Danish\", \"Dutch\", \"Finnish\", \"French\", \n                   \"German\", \"Greek\", \"Italian\", \"Norwegian\", \"Polish\", \"Portuguese\", \n                   \"Russian\", \"Scandinavian\", \"Spanish\", \"Swedish\", \"Swiss\") ~ \"Europe\",\n    \n    country %in% c(\"Bangladeshi\", \"Chinese\", \"Indian\", \"Indonesian\", \"Israeli\", \n                   \"Japanese\", \"Jewish\", \"Korean\", \"Lebanese\", \"Malaysian\", \"Pakistani\", \n                   \"Persian\", \"Thai\", \"Turkish\", \"Vietnamese\") ~ \"Asia\",\n    \n    country %in% c(\"Australian and New Zealander\") ~ \"Oceania\",\n    \n    country %in% c(\"South African\", \"Jamaican\", \"Cuban\", \"Puerto Rican\") ~ \"Caribbean/Africa\",\n    \n    TRUE ~ \"Other\"\n  ))\n  \ncuisines_cleaned\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,058 × 16\n   name       country author ingredients calories   fat carbs protein avg_rating\n   <chr>      <chr>   <chr>  <chr>          <dbl> <dbl> <dbl>   <dbl>      <dbl>\n 1 Saganaki … Greek   John … 1 (4 ounce…      391    25    15      16        4.8\n 2 Coney Isl… Jewish  John … 2 ¾ cups a…      301    17    31       7        4.6\n 3 Diana's H… Austra… CHIPP… 1 ½ cups w…       64     3     9       1        4.3\n 4 Chilean P… Chilean Heidi  ½ cup chop…      106     9     7       1        5  \n 5 Tex-Mex S… Tex-Mex Ann    2 cups all…      449    23    58       7        3.8\n 6 Newfoundl… Canadi… MomWh… 1 (3 pound…      958    24   144      46        4.4\n 7 Pasta e C… Italian Buckw… 1 cup dry …      378    10    59      14        4.3\n 8 Lemon Pop… Amish … Laura… 2 cups all…      157     6    25       2        4.6\n 9 Pan con T… Spanish Luis … 1 large to…      322    16    39       7        5  \n10 Traci's A… Filipi… Traci… 2 tablespo…        4     0     1       0        4.7\n# ℹ 2,048 more rows\n# ℹ 7 more variables: total_ratings <dbl>, reviews <dbl>, prep_time <dbl>,\n#   cook_time <dbl>, total_time <dbl>, servings <dbl>, continent <chr>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data Munging\ncuisines_cleaned %>%\n  mutate(\n    name = as.factor(name),\n    country = as.factor(country),\n    author = as.factor(author),\n    continent = as.factor(continent)\n  ) %>%\n\n  # Arrange the Qual variables first, Quant next\n  dplyr::relocate(where(is.factor), .after = name)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,058 × 16\n   name        country author continent ingredients calories   fat carbs protein\n   <fct>       <fct>   <fct>  <fct>     <chr>          <dbl> <dbl> <dbl>   <dbl>\n 1 Saganaki (… Greek   John … Europe    1 (4 ounce…      391    25    15      16\n 2 Coney Isla… Jewish  John … Asia      2 ¾ cups a…      301    17    31       7\n 3 Diana's Ha… Austra… CHIPP… Oceania   1 ½ cups w…       64     3     9       1\n 4 Chilean Pe… Chilean Heidi  South Am… ½ cup chop…      106     9     7       1\n 5 Tex-Mex Sh… Tex-Mex Ann    North Am… 2 cups all…      449    23    58       7\n 6 Newfoundla… Canadi… MomWh… North Am… 1 (3 pound…      958    24   144      46\n 7 Pasta e Ce… Italian Buckw… Europe    1 cup dry …      378    10    59      14\n 8 Lemon Popp… Amish … Laura… North Am… 2 cups all…      157     6    25       2\n 9 Pan con To… Spanish Luis … Europe    1 large to…      322    16    39       7\n10 Traci's Ad… Filipi… Traci… Other     2 tablespo…        4     0     1       0\n# ℹ 2,048 more rows\n# ℹ 7 more variables: avg_rating <dbl>, total_ratings <dbl>, reviews <dbl>,\n#   prep_time <dbl>, cook_time <dbl>, total_time <dbl>, servings <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(cuisines_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,058\nColumns: 16\n$ name          <chr> \"Saganaki (Flaming Greek Cheese)\", \"Coney Island Knishes…\n$ country       <chr> \"Greek\", \"Jewish\", \"Australian and New Zealander\", \"Chil…\n$ author        <chr> \"John Mitzewich\", \"John Mitzewich\", \"CHIPPENDALE\", \"Heid…\n$ ingredients   <chr> \"1 (4 ounce) package kasseri cheese, 1 tablespoon water,…\n$ calories      <dbl> 391, 301, 64, 106, 449, 958, 378, 157, 322, 4, 389, 253,…\n$ fat           <dbl> 25, 17, 3, 9, 23, 24, 10, 6, 16, 0, 21, 2, 66, 8, 31, 19…\n$ carbs         <dbl> 15, 31, 9, 7, 58, 144, 59, 25, 39, 1, 16, 63, 75, 53, 43…\n$ protein       <dbl> 16, 7, 1, 1, 7, 46, 14, 2, 7, 0, 28, 6, 54, 17, 25, 7, 2…\n$ avg_rating    <dbl> 4.8, 4.6, 4.3, 5.0, 3.8, 4.4, 4.3, 4.6, 5.0, 4.7, 4.4, 4…\n$ total_ratings <dbl> 25, 10, 126, 1, 13, 40, 3, 65, 2, 182, 19, 16, 96, 20, 4…\n$ reviews       <dbl> 22, 9, 104, 1, 11, 32, 3, 55, 2, 138, 15, 16, 84, 15, 39…\n$ prep_time     <dbl> 10, 30, 20, 10, 30, 30, 30, 0, 5, 5, 10, 10, 20, 15, 60,…\n$ cook_time     <dbl> 5, 75, 15, 0, 15, 165, 75, 0, 5, 0, 10, 50, 16, 15, 10, …\n$ total_time    <dbl> 15, 180, 180, 10, 45, 675, 585, 0, 10, 5, 50, 300, 180, …\n$ servings      <dbl> 2, 16, 12, 6, 15, 6, 6, 24, 1, 21, 4, 10, 4, 8, 6, 10, 6…\n$ continent     <chr> \"Europe\", \"Asia\", \"Oceania\", \"South America\", \"North Ame…\n```\n\n\n:::\n:::\n\n\n[**Data Dictionary**]{.underline}\n\n| Title | Definition |\n|------------------------------------|------------------------------------|\n| name | Name of the recipe (character) |\n| country | The country/region the cuisine is from (character) |\n| url | Link to the recipe (character) |\n| author | Author of the recipe (character) |\n| date_published | When the recipe was published or updated (Date) |\n| ingredients | The ingredients of the recipe (character) |\n| calories | Calories per serving (numeric) |\n| fat | Fat per serving (numeric) |\n| carbs | Carbs per serving (numeric) |\n| protein | Protein per serving (numeric) |\n| avg_rating | Average rating out of 5 stars (numeric) |\n| total_ratings | Number of ratings received (numeric) |\n| reviews | Number of written reviews (numeric) |\n| prep_time | Preparation time in minutes (numeric) |\n| cook_time | Cooking time in minutes (numeric) |\n| total_time | Total time (prep + cook) in minutes; note that this may not always equal the sum of prep_time and cook_time due to exclusions of other time-related steps (numeric) |\n| servings | Number of servings (numeric) |\n\n[**Tiny Table**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>%\n  head(10) %>%\n  tinytable::tt(caption = \"Cuisines Dataset (Clean)\") %>%\n  tinytable::theme_html(class = \"table table-hover table-striped table-condensed\") %>%\n  style_tt(fontsize = 0.8) %>%\n  stats::setNames(c(\"Dish Name\", \"Country\", \"Author\", \"Ingredients\", \"Calories\", \"Fat\", \"Carbs\", \"Protein\", \"Avg Rating\", \"Total Ratings\", \"Reviews\", \"Prep Time\", \"Cook Time\", \"Total Time\", \"Servings\", \"Continent\"))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_0xxt07i4mejtta6sefoo(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_0xxt07i4mejtta6sefoo\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_0xxt07i4mejtta6sefoo(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_0xxt07i4mejtta6sefoo\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '10', j: 1 }, { i: '10', j: 5 }, { i: '10', j: 8 }, { i: '10', j: 9 }, { i: '10', j: 3 }, { i: '10', j: 2 }, { i: '10', j: 13 }, { i: '10', j: 7 }, { i: '10', j: 14 }, { i: '10', j: 6 }, { i: '10', j: 0 }, { i: '10', j: 11 }, { i: '10', j: 12 }, { i: '10', j: 10 }, { i: '10', j: 4 }, { i: '10', j: 15 },  ], css_id: 'tinytable_css_o2ha3z19suwfxr0woekc',}, \n          { positions: [ { i: '3', j: 0 }, { i: '3', j: 1 }, { i: '2', j: 0 }, { i: '7', j: 1 }, { i: '6', j: 0 }, { i: '5', j: 1 }, { i: '9', j: 0 }, { i: '6', j: 4 }, { i: '7', j: 0 }, { i: '3', j: 2 }, { i: '2', j: 1 }, { i: '5', j: 2 }, { i: '6', j: 2 }, { i: '7', j: 2 }, { i: '6', j: 1 }, { i: '9', j: 2 }, { i: '6', j: 6 }, { i: '9', j: 1 }, { i: '6', j: 5 }, { i: '2', j: 3 }, { i: '3', j: 3 }, { i: '2', j: 2 }, { i: '5', j: 3 }, { i: '6', j: 3 }, { i: '7', j: 3 }, { i: '1', j: 0 }, { i: '9', j: 3 }, { i: '6', j: 7 }, { i: '4', j: 0 }, { i: '5', j: 0 }, { i: '2', j: 4 }, { i: '3', j: 4 }, { i: '8', j: 0 }, { i: '5', j: 4 }, { i: '2', j: 8 }, { i: '7', j: 4 }, { i: '1', j: 1 }, { i: '9', j: 4 }, { i: '6', j: 8 }, { i: '4', j: 1 }, { i: '1', j: 5 }, { i: '2', j: 5 }, { i: '3', j: 5 }, { i: '8', j: 1 }, { i: '5', j: 5 }, { i: '2', j: 9 }, { i: '7', j: 5 }, { i: '1', j: 2 }, { i: '9', j: 5 }, { i: '6', j: 9 }, { i: '4', j: 2 }, { i: '1', j: 6 }, { i: '2', j: 6 }, { i: '3', j: 6 }, { i: '8', j: 2 }, { i: '5', j: 6 }, { i: '2', j: 10 }, { i: '7', j: 6 }, { i: '1', j: 3 }, { i: '9', j: 6 }, { i: '6', j: 10 }, { i: '4', j: 3 }, { i: '1', j: 7 }, { i: '2', j: 7 }, { i: '3', j: 7 }, { i: '8', j: 3 }, { i: '5', j: 7 }, { i: '2', j: 11 }, { i: '7', j: 7 }, { i: '1', j: 4 }, { i: '9', j: 7 }, { i: '6', j: 11 }, { i: '4', j: 4 }, { i: '1', j: 8 }, { i: '9', j: 11 }, { i: '3', j: 8 }, { i: '8', j: 4 }, { i: '5', j: 8 }, { i: '2', j: 12 }, { i: '7', j: 8 }, { i: '8', j: 8 }, { i: '9', j: 8 }, { i: '6', j: 12 }, { i: '4', j: 5 }, { i: '1', j: 9 }, { i: '9', j: 12 }, { i: '3', j: 9 }, { i: '8', j: 5 }, { i: '5', j: 9 }, { i: '2', j: 13 }, { i: '7', j: 9 }, { i: '8', j: 9 }, { i: '9', j: 9 }, { i: '6', j: 13 }, { i: '4', j: 6 }, { i: '1', j: 10 }, { i: '9', j: 13 }, { i: '3', j: 10 }, { i: '8', j: 6 }, { i: '5', j: 10 }, { i: '2', j: 14 }, { i: '7', j: 10 }, { i: '8', j: 10 }, { i: '9', j: 10 }, { i: '6', j: 14 }, { i: '4', j: 7 }, { i: '1', j: 11 }, { i: '9', j: 14 }, { i: '3', j: 11 }, { i: '8', j: 7 }, { i: '5', j: 11 }, { i: '2', j: 15 }, { i: '7', j: 11 }, { i: '8', j: 11 }, { i: '5', j: 15 }, { i: '6', j: 15 }, { i: '4', j: 8 }, { i: '1', j: 12 }, { i: '9', j: 15 }, { i: '3', j: 12 }, { i: '4', j: 12 }, { i: '5', j: 12 }, { i: '8', j: 13 }, { i: '7', j: 12 }, { i: '8', j: 12 }, { i: '4', j: 10 }, { i: '1', j: 14 }, { i: '4', j: 9 }, { i: '1', j: 13 }, { i: '4', j: 14 }, { i: '3', j: 13 }, { i: '4', j: 13 }, { i: '5', j: 13 }, { i: '8', j: 14 }, { i: '7', j: 13 }, { i: '3', j: 15 }, { i: '4', j: 11 }, { i: '1', j: 15 }, { i: '5', j: 14 }, { i: '4', j: 15 }, { i: '3', j: 14 }, { i: '8', j: 15 }, { i: '7', j: 14 }, { i: '7', j: 15 },  ], css_id: 'tinytable_css_3ao2tvfb2cpzkbt7ibmc',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 11 }, { i: '0', j: 5 }, { i: '0', j: 3 }, { i: '0', j: 4 }, { i: '0', j: 15 }, { i: '0', j: 9 }, { i: '0', j: 1 }, { i: '0', j: 8 }, { i: '0', j: 2 }, { i: '0', j: 13 }, { i: '0', j: 12 }, { i: '0', j: 6 }, { i: '0', j: 7 }, { i: '0', j: 10 }, { i: '0', j: 14 },  ], css_id: 'tinytable_css_2w76tlo55oa09f58064g',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_0xxt07i4mejtta6sefoo(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_o2ha3z19suwfxr0woekc, .table th.tinytable_css_o2ha3z19suwfxr0woekc { font-size: 0.8em; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_3ao2tvfb2cpzkbt7ibmc, .table th.tinytable_css_3ao2tvfb2cpzkbt7ibmc { font-size: 0.8em; }\n      .table td.tinytable_css_2w76tlo55oa09f58064g, .table th.tinytable_css_2w76tlo55oa09f58064g { font-size: 0.8em; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-hover table-striped table-condensed\" id=\"tinytable_0xxt07i4mejtta6sefoo\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Cuisines Dataset (Clean)</caption>\n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">Dish Name</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">Country</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">Author</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">Ingredients</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">Calories</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">Fat</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"6\">Carbs</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"7\">Protein</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"8\">Avg Rating</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"9\">Total Ratings</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"10\">Reviews</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"11\">Prep Time</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"12\">Cook Time</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"13\">Total Time</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"14\">Servings</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"15\">Continent</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">Saganaki (Flaming Greek Cheese)</td>\n                  <td data-row=\"1\" data-col=\"1\">Greek</td>\n                  <td data-row=\"1\" data-col=\"2\">John Mitzewich</td>\n                  <td data-row=\"1\" data-col=\"3\">1 (4 ounce) package kasseri cheese, 1 tablespoon water, or as needed, ¼ cup all-purpose flour, or as needed, 1 tablespoon olive oil, 2 tablespoons brandy, at room temperature, ½  lemon, or to taste, 1 tablespoon freshly chopped Italian parsley</td>\n                  <td data-row=\"1\" data-col=\"4\">391</td>\n                  <td data-row=\"1\" data-col=\"5\">25</td>\n                  <td data-row=\"1\" data-col=\"6\">15</td>\n                  <td data-row=\"1\" data-col=\"7\">16</td>\n                  <td data-row=\"1\" data-col=\"8\">4.8</td>\n                  <td data-row=\"1\" data-col=\"9\">25</td>\n                  <td data-row=\"1\" data-col=\"10\">22</td>\n                  <td data-row=\"1\" data-col=\"11\">10</td>\n                  <td data-row=\"1\" data-col=\"12\">5</td>\n                  <td data-row=\"1\" data-col=\"13\">15</td>\n                  <td data-row=\"1\" data-col=\"14\">2</td>\n                  <td data-row=\"1\" data-col=\"15\">Europe</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">Coney Island Knishes</td>\n                  <td data-row=\"2\" data-col=\"1\">Jewish</td>\n                  <td data-row=\"2\" data-col=\"2\">John Mitzewich</td>\n                  <td data-row=\"2\" data-col=\"3\">2 ¾ cups all-purpose flour, or more as needed, 1 teaspoon kosher salt, 1 teaspoon baking powder, ½ cup canola oil, ½ cup warm water, 1 large egg, beaten, 1 teaspoon white vinegar, 2 ½ pounds russet potatoes, peeled and quartered, 8 ounces corned beef, 1 cup finely chopped cooked cabbage, ½ cup butter, 2 cups diced yellow onion, 2 teaspoons kosher salt, 1 pinch cayenne pepper, or to taste, salt and ground black pepper to taste, 1 large egg, 2 teaspoons water, or as needed, 1 tablespoon olive oil, or as needed</td>\n                  <td data-row=\"2\" data-col=\"4\">301</td>\n                  <td data-row=\"2\" data-col=\"5\">17</td>\n                  <td data-row=\"2\" data-col=\"6\">31</td>\n                  <td data-row=\"2\" data-col=\"7\">7</td>\n                  <td data-row=\"2\" data-col=\"8\">4.6</td>\n                  <td data-row=\"2\" data-col=\"9\">10</td>\n                  <td data-row=\"2\" data-col=\"10\">9</td>\n                  <td data-row=\"2\" data-col=\"11\">30</td>\n                  <td data-row=\"2\" data-col=\"12\">75</td>\n                  <td data-row=\"2\" data-col=\"13\">180</td>\n                  <td data-row=\"2\" data-col=\"14\">16</td>\n                  <td data-row=\"2\" data-col=\"15\">Asia</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">Diana's Hawaiian Bread Rolls</td>\n                  <td data-row=\"3\" data-col=\"1\">Australian and New Zealander</td>\n                  <td data-row=\"3\" data-col=\"2\">CHIPPENDALE</td>\n                  <td data-row=\"3\" data-col=\"3\">1 ½ cups warm water (110 degrees F/45 degrees C), 1  egg, 1 teaspoon salt, 1 teaspoon vanilla extract, 1 teaspoon lemon extract, 1 tablespoon molasses, 1 tablespoon honey, 5 tablespoons white sugar, 2 tablespoons dry milk powder, 2 tablespoons butter flavored shortening, 4 ½ cups bread flour, 2 teaspoons active dry yeast</td>\n                  <td data-row=\"3\" data-col=\"4\">64</td>\n                  <td data-row=\"3\" data-col=\"5\">3</td>\n                  <td data-row=\"3\" data-col=\"6\">9</td>\n                  <td data-row=\"3\" data-col=\"7\">1</td>\n                  <td data-row=\"3\" data-col=\"8\">4.3</td>\n                  <td data-row=\"3\" data-col=\"9\">126</td>\n                  <td data-row=\"3\" data-col=\"10\">104</td>\n                  <td data-row=\"3\" data-col=\"11\">20</td>\n                  <td data-row=\"3\" data-col=\"12\">15</td>\n                  <td data-row=\"3\" data-col=\"13\">180</td>\n                  <td data-row=\"3\" data-col=\"14\">12</td>\n                  <td data-row=\"3\" data-col=\"15\">Oceania</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">Chilean Pebre</td>\n                  <td data-row=\"4\" data-col=\"1\">Chilean</td>\n                  <td data-row=\"4\" data-col=\"2\">Heidi</td>\n                  <td data-row=\"4\" data-col=\"3\">½ cup chopped cilantro, ¼ cup olive oil, ¼ cup red wine vinegar, 1  tomato, chopped, 1 small onion, chopped, 1  lemon, juiced, 2  chile peppers, seeded and chopped, 2 tablespoons minced garlic, salt and pepper to taste</td>\n                  <td data-row=\"4\" data-col=\"4\">106</td>\n                  <td data-row=\"4\" data-col=\"5\">9</td>\n                  <td data-row=\"4\" data-col=\"6\">7</td>\n                  <td data-row=\"4\" data-col=\"7\">1</td>\n                  <td data-row=\"4\" data-col=\"8\">5.0</td>\n                  <td data-row=\"4\" data-col=\"9\">1</td>\n                  <td data-row=\"4\" data-col=\"10\">1</td>\n                  <td data-row=\"4\" data-col=\"11\">10</td>\n                  <td data-row=\"4\" data-col=\"12\">0</td>\n                  <td data-row=\"4\" data-col=\"13\">10</td>\n                  <td data-row=\"4\" data-col=\"14\">6</td>\n                  <td data-row=\"4\" data-col=\"15\">South America</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">Tex-Mex Sheet Cake</td>\n                  <td data-row=\"5\" data-col=\"1\">Tex-Mex</td>\n                  <td data-row=\"5\" data-col=\"2\">Ann</td>\n                  <td data-row=\"5\" data-col=\"3\">2 cups all-purpose flour, 1 ½ cups brown sugar, 1 teaspoon baking soda, 1 teaspoon ground cinnamon, ½ teaspoon salt, 1 cup margarine, 1 cup water, ¼ cup unsweetened cocoa powder, 1 tablespoon instant coffee granules, cup sweetened condensed milk, 2  eggs, 1 teaspoon vanilla extract, ¼ cup margarine, ¼ cup unsweetened cocoa powder, 1 tablespoon instant coffee granules, ⅔ cup sweetened condensed milk, 1 cup confectioners' sugar, 1 cup slivered, toasted almonds</td>\n                  <td data-row=\"5\" data-col=\"4\">449</td>\n                  <td data-row=\"5\" data-col=\"5\">23</td>\n                  <td data-row=\"5\" data-col=\"6\">58</td>\n                  <td data-row=\"5\" data-col=\"7\">7</td>\n                  <td data-row=\"5\" data-col=\"8\">3.8</td>\n                  <td data-row=\"5\" data-col=\"9\">13</td>\n                  <td data-row=\"5\" data-col=\"10\">11</td>\n                  <td data-row=\"5\" data-col=\"11\">30</td>\n                  <td data-row=\"5\" data-col=\"12\">15</td>\n                  <td data-row=\"5\" data-col=\"13\">45</td>\n                  <td data-row=\"5\" data-col=\"14\">15</td>\n                  <td data-row=\"5\" data-col=\"15\">North America</td>\n                </tr>\n                <tr>\n                  <td data-row=\"6\" data-col=\"0\">Newfoundland Jigg's Dinner</td>\n                  <td data-row=\"6\" data-col=\"1\">Canadian</td>\n                  <td data-row=\"6\" data-col=\"2\">MomWhoCooks</td>\n                  <td data-row=\"6\" data-col=\"3\">1 (3 pound) boneless corned beef brisket, 1 ½ cups yellow split peas, 1 large head cabbage, quartered, 1 medium turnip, peeled and cubed, 6  carrots, peeled and cut in chunks, 6 large potatoes, peeled and quartered, 2 tablespoons butter, ½ teaspoon black pepper, 1 ½ cups all-purpose flour, 2 teaspoons white sugar, 2 teaspoons baking powder, ¾ cup water, or as needed</td>\n                  <td data-row=\"6\" data-col=\"4\">958</td>\n                  <td data-row=\"6\" data-col=\"5\">24</td>\n                  <td data-row=\"6\" data-col=\"6\">144</td>\n                  <td data-row=\"6\" data-col=\"7\">46</td>\n                  <td data-row=\"6\" data-col=\"8\">4.4</td>\n                  <td data-row=\"6\" data-col=\"9\">40</td>\n                  <td data-row=\"6\" data-col=\"10\">32</td>\n                  <td data-row=\"6\" data-col=\"11\">30</td>\n                  <td data-row=\"6\" data-col=\"12\">165</td>\n                  <td data-row=\"6\" data-col=\"13\">675</td>\n                  <td data-row=\"6\" data-col=\"14\">6</td>\n                  <td data-row=\"6\" data-col=\"15\">North America</td>\n                </tr>\n                <tr>\n                  <td data-row=\"7\" data-col=\"0\">Pasta e Ceci (Italian Chickpea and Pasta Stew)</td>\n                  <td data-row=\"7\" data-col=\"1\">Italian</td>\n                  <td data-row=\"7\" data-col=\"2\">Buckwheat Queen</td>\n                  <td data-row=\"7\" data-col=\"3\">1 cup dry chickpeas, 1 tablespoon baking soda, 1 yellow onion, 1 stalk celery, 1 small zucchini, 1 carrot, 2 tablespoons olive oil, 1 sprig fresh sage leaves, 1 sprig fresh rosemary, 1 sprig fresh thyme, 3 cups chicken broth, or more as needed, 2 peeled whole canned tomatoes, 8 1/2 ounces ditalini pasta, such as Barilla® Gluten Free Ditalini, salt and freshly ground black pepper to taste, 1 fresh cayenne pepper, seeded and minced, or more to taste, 1 tablespoon extra virgin olive oil</td>\n                  <td data-row=\"7\" data-col=\"4\">378</td>\n                  <td data-row=\"7\" data-col=\"5\">10</td>\n                  <td data-row=\"7\" data-col=\"6\">59</td>\n                  <td data-row=\"7\" data-col=\"7\">14</td>\n                  <td data-row=\"7\" data-col=\"8\">4.3</td>\n                  <td data-row=\"7\" data-col=\"9\">3</td>\n                  <td data-row=\"7\" data-col=\"10\">3</td>\n                  <td data-row=\"7\" data-col=\"11\">30</td>\n                  <td data-row=\"7\" data-col=\"12\">75</td>\n                  <td data-row=\"7\" data-col=\"13\">585</td>\n                  <td data-row=\"7\" data-col=\"14\">6</td>\n                  <td data-row=\"7\" data-col=\"15\">Europe</td>\n                </tr>\n                <tr>\n                  <td data-row=\"8\" data-col=\"0\">Lemon Poppy Seed Amish Friendship Bread</td>\n                  <td data-row=\"8\" data-col=\"1\">Amish and Mennonite</td>\n                  <td data-row=\"8\" data-col=\"2\">Laura Sandahl</td>\n                  <td data-row=\"8\" data-col=\"3\">2 cups all-purpose flour, 1 cup white sugar, 1 ½ teaspoons baking powder, ½ teaspoon baking soda, ½ teaspoon salt, ½ teaspoon ground cinnamon, ⅛ cup poppy seeds, 2 (3 ounce) packages instant lemon pudding mix, 1 cup Amish Friendship Bread Starter, 2  eggs, ½ cup milk, ½ cup applesauce, 2 teaspoons vanilla extract, ½ cup vegetable oil</td>\n                  <td data-row=\"8\" data-col=\"4\">157</td>\n                  <td data-row=\"8\" data-col=\"5\">6</td>\n                  <td data-row=\"8\" data-col=\"6\">25</td>\n                  <td data-row=\"8\" data-col=\"7\">2</td>\n                  <td data-row=\"8\" data-col=\"8\">4.6</td>\n                  <td data-row=\"8\" data-col=\"9\">65</td>\n                  <td data-row=\"8\" data-col=\"10\">55</td>\n                  <td data-row=\"8\" data-col=\"11\">0</td>\n                  <td data-row=\"8\" data-col=\"12\">0</td>\n                  <td data-row=\"8\" data-col=\"13\">0</td>\n                  <td data-row=\"8\" data-col=\"14\">24</td>\n                  <td data-row=\"8\" data-col=\"15\">North America</td>\n                </tr>\n                <tr>\n                  <td data-row=\"9\" data-col=\"0\">Pan con Tomate (Spanish Tomato Bread)</td>\n                  <td data-row=\"9\" data-col=\"1\">Spanish</td>\n                  <td data-row=\"9\" data-col=\"2\">Luis Luna</td>\n                  <td data-row=\"9\" data-col=\"3\">1 large tomato, chopped, 2 slices crusty bread, 1 clove garlic, halved, 1 tablespoon extra-virgin olive oil, or to taste, sea salt to taste</td>\n                  <td data-row=\"9\" data-col=\"4\">322</td>\n                  <td data-row=\"9\" data-col=\"5\">16</td>\n                  <td data-row=\"9\" data-col=\"6\">39</td>\n                  <td data-row=\"9\" data-col=\"7\">7</td>\n                  <td data-row=\"9\" data-col=\"8\">5.0</td>\n                  <td data-row=\"9\" data-col=\"9\">2</td>\n                  <td data-row=\"9\" data-col=\"10\">2</td>\n                  <td data-row=\"9\" data-col=\"11\">5</td>\n                  <td data-row=\"9\" data-col=\"12\">5</td>\n                  <td data-row=\"9\" data-col=\"13\">10</td>\n                  <td data-row=\"9\" data-col=\"14\">1</td>\n                  <td data-row=\"9\" data-col=\"15\">Europe</td>\n                </tr>\n                <tr>\n                  <td data-row=\"10\" data-col=\"0\">Traci's Adobo Seasoning</td>\n                  <td data-row=\"10\" data-col=\"1\">Filipino</td>\n                  <td data-row=\"10\" data-col=\"2\">Traci-in-Cali</td>\n                  <td data-row=\"10\" data-col=\"3\">2 tablespoons salt, 1 tablespoon paprika, 2 teaspoons ground black pepper, 1 ½ teaspoons onion powder, 1 ½ teaspoons dried oregano, 1 ½ teaspoons ground cumin, 1 teaspoon garlic powder, 1 teaspoon chili powder</td>\n                  <td data-row=\"10\" data-col=\"4\">4</td>\n                  <td data-row=\"10\" data-col=\"5\">0</td>\n                  <td data-row=\"10\" data-col=\"6\">1</td>\n                  <td data-row=\"10\" data-col=\"7\">0</td>\n                  <td data-row=\"10\" data-col=\"8\">4.7</td>\n                  <td data-row=\"10\" data-col=\"9\">182</td>\n                  <td data-row=\"10\" data-col=\"10\">138</td>\n                  <td data-row=\"10\" data-col=\"11\">5</td>\n                  <td data-row=\"10\" data-col=\"12\">0</td>\n                  <td data-row=\"10\" data-col=\"13\">5</td>\n                  <td data-row=\"10\" data-col=\"14\">21</td>\n                  <td data-row=\"10\" data-col=\"15\">Other</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n**Inspecting Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Summarizing the Data\ncuisines_cleaned %>% \n  mosaic::inspect()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n         name     class levels    n missing\n1        name character   2056 2058       0\n2     country character     49 2058       0\n3      author character   1551 2058       0\n4 ingredients character   2058 2058       0\n5   continent character      7 2058       0\n                                   distribution\n1  (%) ...                                     \n2 Canadian (3.2%), Chinese (3.1%) ...          \n3 John Mitzewich (6.1%) ...                    \n4  (%) ...                                     \n5 Europe (31.4%), Asia (30.1%) ...             \n\nquantitative variables:  \n            name   class min    Q1 median     Q3   max      mean          sd\n1       calories numeric   3 193.0  321.5 479.75  2266 359.42809 234.9719187\n2            fat numeric   0   7.0   15.0  25.00   190  18.56268  16.3717510\n3          carbs numeric   1  13.0   26.0  45.00   264  32.01020  25.8202039\n4        protein numeric   0   4.0   12.0  26.00   135  16.71914  16.0507470\n5     avg_rating numeric   1   4.3    4.6   4.80     5   4.50724   0.3989182\n6  total_ratings numeric   1   6.0   25.0  90.00   997  86.54227 148.4419829\n7        reviews numeric   1   6.0   22.0  75.00   975  77.84500 142.6052845\n8      prep_time numeric   0  10.0   15.0  25.00  1800  21.89747  62.9343454\n9      cook_time numeric   0  10.0   25.0  45.00   600  42.83673  64.3910224\n10    total_time numeric   0  35.0   60.0 120.00 14440 175.49223 664.2489658\n11      servings numeric   1   4.0    8.0  12.00   240  10.41302  13.4310195\n      n missing\n1  2058       0\n2  2058       0\n3  2058       0\n4  2058       0\n5  2058       0\n6  2058       0\n7  2058       0\n8  2058       0\n9  2058       0\n10 2058       0\n11 2058       0\n```\n\n\n:::\n:::\n\n\n1.  Calories across Continents How are calories of different cuisine's dishes spread across the World?\n\nHow many dishes are there from each country?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Summarizing the Data\ncuisines_cleaned %>% \n  dplyr::count(country) %>%\n  tt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_rv7le81zmrzu14km1v8h(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_rv7le81zmrzu14km1v8h\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_rv7le81zmrzu14km1v8h(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_rv7le81zmrzu14km1v8h\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '49', j: 0 }, { i: '49', j: 1 },  ], css_id: 'tinytable_css_1l7s1o2c71af98mpbbbx',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 1 },  ], css_id: 'tinytable_css_gaq8ih1fiaemss0j49km',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_rv7le81zmrzu14km1v8h(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_1l7s1o2c71af98mpbbbx, .table th.tinytable_css_1l7s1o2c71af98mpbbbx { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_gaq8ih1fiaemss0j49km, .table th.tinytable_css_gaq8ih1fiaemss0j49km { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_rv7le81zmrzu14km1v8h\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">country</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">n</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">Amish and Mennonite</td>\n                  <td data-row=\"1\" data-col=\"1\">59</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">Argentinian</td>\n                  <td data-row=\"2\" data-col=\"1\">28</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">Australian and New Zealander</td>\n                  <td data-row=\"3\" data-col=\"1\">60</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">Austrian</td>\n                  <td data-row=\"4\" data-col=\"1\">21</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">Bangladeshi</td>\n                  <td data-row=\"5\" data-col=\"1\">11</td>\n                </tr>\n                <tr>\n                  <td data-row=\"6\" data-col=\"0\">Belgian</td>\n                  <td data-row=\"6\" data-col=\"1\">6</td>\n                </tr>\n                <tr>\n                  <td data-row=\"7\" data-col=\"0\">Brazilian</td>\n                  <td data-row=\"7\" data-col=\"1\">59</td>\n                </tr>\n                <tr>\n                  <td data-row=\"8\" data-col=\"0\">Cajun and Creole</td>\n                  <td data-row=\"8\" data-col=\"1\">60</td>\n                </tr>\n                <tr>\n                  <td data-row=\"9\" data-col=\"0\">Canadian</td>\n                  <td data-row=\"9\" data-col=\"1\">66</td>\n                </tr>\n                <tr>\n                  <td data-row=\"10\" data-col=\"0\">Chilean</td>\n                  <td data-row=\"10\" data-col=\"1\">16</td>\n                </tr>\n                <tr>\n                  <td data-row=\"11\" data-col=\"0\">Chinese</td>\n                  <td data-row=\"11\" data-col=\"1\">64</td>\n                </tr>\n                <tr>\n                  <td data-row=\"12\" data-col=\"0\">Colombian</td>\n                  <td data-row=\"12\" data-col=\"1\">9</td>\n                </tr>\n                <tr>\n                  <td data-row=\"13\" data-col=\"0\">Cuban</td>\n                  <td data-row=\"13\" data-col=\"1\">63</td>\n                </tr>\n                <tr>\n                  <td data-row=\"14\" data-col=\"0\">Danish</td>\n                  <td data-row=\"14\" data-col=\"1\">29</td>\n                </tr>\n                <tr>\n                  <td data-row=\"15\" data-col=\"0\">Dutch</td>\n                  <td data-row=\"15\" data-col=\"1\">22</td>\n                </tr>\n                <tr>\n                  <td data-row=\"16\" data-col=\"0\">Filipino</td>\n                  <td data-row=\"16\" data-col=\"1\">64</td>\n                </tr>\n                <tr>\n                  <td data-row=\"17\" data-col=\"0\">Finnish</td>\n                  <td data-row=\"17\" data-col=\"1\">17</td>\n                </tr>\n                <tr>\n                  <td data-row=\"18\" data-col=\"0\">French</td>\n                  <td data-row=\"18\" data-col=\"1\">61</td>\n                </tr>\n                <tr>\n                  <td data-row=\"19\" data-col=\"0\">German</td>\n                  <td data-row=\"19\" data-col=\"1\">57</td>\n                </tr>\n                <tr>\n                  <td data-row=\"20\" data-col=\"0\">Greek</td>\n                  <td data-row=\"20\" data-col=\"1\">56</td>\n                </tr>\n                <tr>\n                  <td data-row=\"21\" data-col=\"0\">Indian</td>\n                  <td data-row=\"21\" data-col=\"1\">64</td>\n                </tr>\n                <tr>\n                  <td data-row=\"22\" data-col=\"0\">Indonesian</td>\n                  <td data-row=\"22\" data-col=\"1\">21</td>\n                </tr>\n                <tr>\n                  <td data-row=\"23\" data-col=\"0\">Israeli</td>\n                  <td data-row=\"23\" data-col=\"1\">23</td>\n                </tr>\n                <tr>\n                  <td data-row=\"24\" data-col=\"0\">Italian</td>\n                  <td data-row=\"24\" data-col=\"1\">54</td>\n                </tr>\n                <tr>\n                  <td data-row=\"25\" data-col=\"0\">Jamaican</td>\n                  <td data-row=\"25\" data-col=\"1\">40</td>\n                </tr>\n                <tr>\n                  <td data-row=\"26\" data-col=\"0\">Japanese</td>\n                  <td data-row=\"26\" data-col=\"1\">53</td>\n                </tr>\n                <tr>\n                  <td data-row=\"27\" data-col=\"0\">Jewish</td>\n                  <td data-row=\"27\" data-col=\"1\">60</td>\n                </tr>\n                <tr>\n                  <td data-row=\"28\" data-col=\"0\">Korean</td>\n                  <td data-row=\"28\" data-col=\"1\">55</td>\n                </tr>\n                <tr>\n                  <td data-row=\"29\" data-col=\"0\">Lebanese</td>\n                  <td data-row=\"29\" data-col=\"1\">46</td>\n                </tr>\n                <tr>\n                  <td data-row=\"30\" data-col=\"0\">Malaysian</td>\n                  <td data-row=\"30\" data-col=\"1\">23</td>\n                </tr>\n                <tr>\n                  <td data-row=\"31\" data-col=\"0\">Norwegian</td>\n                  <td data-row=\"31\" data-col=\"1\">26</td>\n                </tr>\n                <tr>\n                  <td data-row=\"32\" data-col=\"0\">Pakistani</td>\n                  <td data-row=\"32\" data-col=\"1\">23</td>\n                </tr>\n                <tr>\n                  <td data-row=\"33\" data-col=\"0\">Persian</td>\n                  <td data-row=\"33\" data-col=\"1\">36</td>\n                </tr>\n                <tr>\n                  <td data-row=\"34\" data-col=\"0\">Peruvian</td>\n                  <td data-row=\"34\" data-col=\"1\">34</td>\n                </tr>\n                <tr>\n                  <td data-row=\"35\" data-col=\"0\">Polish</td>\n                  <td data-row=\"35\" data-col=\"1\">60</td>\n                </tr>\n                <tr>\n                  <td data-row=\"36\" data-col=\"0\">Portuguese</td>\n                  <td data-row=\"36\" data-col=\"1\">51</td>\n                </tr>\n                <tr>\n                  <td data-row=\"37\" data-col=\"0\">Puerto Rican</td>\n                  <td data-row=\"37\" data-col=\"1\">57</td>\n                </tr>\n                <tr>\n                  <td data-row=\"38\" data-col=\"0\">Russian</td>\n                  <td data-row=\"38\" data-col=\"1\">63</td>\n                </tr>\n                <tr>\n                  <td data-row=\"39\" data-col=\"0\">Scandinavian</td>\n                  <td data-row=\"39\" data-col=\"1\">33</td>\n                </tr>\n                <tr>\n                  <td data-row=\"40\" data-col=\"0\">Soul Food</td>\n                  <td data-row=\"40\" data-col=\"1\">63</td>\n                </tr>\n                <tr>\n                  <td data-row=\"41\" data-col=\"0\">South African</td>\n                  <td data-row=\"41\" data-col=\"1\">19</td>\n                </tr>\n                <tr>\n                  <td data-row=\"42\" data-col=\"0\">Southern Recipes</td>\n                  <td data-row=\"42\" data-col=\"1\">44</td>\n                </tr>\n                <tr>\n                  <td data-row=\"43\" data-col=\"0\">Spanish</td>\n                  <td data-row=\"43\" data-col=\"1\">52</td>\n                </tr>\n                <tr>\n                  <td data-row=\"44\" data-col=\"0\">Swedish</td>\n                  <td data-row=\"44\" data-col=\"1\">29</td>\n                </tr>\n                <tr>\n                  <td data-row=\"45\" data-col=\"0\">Swiss</td>\n                  <td data-row=\"45\" data-col=\"1\">9</td>\n                </tr>\n                <tr>\n                  <td data-row=\"46\" data-col=\"0\">Tex-Mex</td>\n                  <td data-row=\"46\" data-col=\"1\">51</td>\n                </tr>\n                <tr>\n                  <td data-row=\"47\" data-col=\"0\">Thai</td>\n                  <td data-row=\"47\" data-col=\"1\">58</td>\n                </tr>\n                <tr>\n                  <td data-row=\"48\" data-col=\"0\">Turkish</td>\n                  <td data-row=\"48\" data-col=\"1\">26</td>\n                </tr>\n                <tr>\n                  <td data-row=\"49\" data-col=\"0\">Vietnamese</td>\n                  <td data-row=\"49\" data-col=\"1\">57</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>%\n  gf_violin(continent ~ calories, fill = ~continent, color = \"black\") %>%\n  gf_labs(\n    title = \"Plot 1A: Calories vs. Continents\",\n    subtitle = \"Distribution of calories across different continents\",\n    x = \"Calories\",\n    y = \"Continent\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned%>% \n  gf_boxplot(calories ~ continent, orientation = \"x\", fill = ~continent, color = \"black\") %>%\n  gf_labs(\n    y = \"Calories\",\n    x = \"Continent\", \n    title = \"Plot 1B: Calories vs. Continents\",\n    subtitle = \"Distribution of calories across different continents\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>%\n  gf_boxplot(continent ~ calories, fill = ~calories>=480, orientation = \"y\") %>%\n  gf_labs(\n    y = \"Country\", x = \"Calorie Content\", title = \"Plot 1C: Calories vs. Continent Box plot\")\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nInferences:\n\n-   Wider sections of a violin = where more dishes cluster (higher density)\n-   Narrower sections of the violin = fewer dishes at those calorie levels\n\nContinents like Europe and North America have a wider and more stretched distribution, suggesting greater variation in calorie content. Cuisines here range from very low to very high calories. In contrast, Oceania and Asia have narrower distributions, implying they have more consistent calorie levels across the various dishes that originate from there.\n\n-   Asia and Oceania: Cluster around 400–700 calories, indicating lighter dishes on average.\n-   Europe and North America: Have thicker regions extending up to 1000+ calories, meaning heavier, more calorie-dense cuisines are common.\n\nAsian and Oceanian diets might focus more on lighter, balanced meals, whereas European and North American cuisines tend toward richer, higher-calorie dishes\n\n-   European and North American have more outliers compared to other continents like Oceania and Asia, this could be a result of some rich high calorie ingredients they use in some of their dishes like cream, cheese, and meats.\n\n-   There might be cultural or ingredient-based dietary trends. This helps us learn alot about regional dietary habits from looking at such graphs.\n\nMacronutrient composition by continent\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned%>% \n  pivot_longer(cols = c(calories, protein, carbs, fat),\n               names_to = \"nutrient\",\n               values_to = \"value\") %>% \n\ngf_bar(nutrient ~ country | continent, fill = ~nutrient, position = \"stack\", data = cuisines_cleaned) %>%\n  gf_labs(\n    title = \"Macronutrient Composition by Continent\",\n    subtitle = \"Layered area plot showing calories, protein, carbs, and fats across continents\",\n    x = \"Cuisine\",\n    y = \"Nutrient Value\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Ignoring unknown aesthetics: .\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>%\n  count(calories) %>%\n  arrange(desc(calories)) %>%\n  top_n(3, n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  calories     n\n     <dbl> <int>\n1      485     9\n2      356     9\n3      258     9\n4      169     9\n5      167     9\n6      145     9\n```\n\n\n:::\n:::\n\n\n2.  Fats vs. Calories\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>% \ngf_point(fat~ calories, position = \"jitter\", color = ~continent, data = cuisines_cleaned) %>%\n  gf_lm() %>% \n  gf_labs(\n    title = \"Plot 2A: Average Calorie & Fat content of dishes\",\n    subtitle = \"Exploring the relationship between fat and calorie content across different continents\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##Average calorie & fat content of dishes significantly differs across continent\ncuisines_cleaned %>% \n  filter(continent == \"South America\") %>% \ngf_point(fat~ calories | country, position = \"jitter\", color = ~country, data = cuisines_cleaned) %>%\n  gf_lm(color = \"grey\") %>% \n  gf_labs(\n    title = \"Plot 2B: Average Calorie & Fat content of dishes from South America\",\n    subtitle = \"Facetted by Country\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##Average calorie & fat content of dishes significantly differs across continent\ncuisines_cleaned %>% \n  filter(continent == \"Europe\") %>% \ngf_point(fat~ calories | country, position = \"jitter\", color = ~country, data = cuisines_cleaned) %>%\n  gf_lm(color = \"grey\") %>% \n  gf_labs(\n    title = \"Plot 2B: Average Calorie & Fat content of dishes from Europe\",\n    subtitle = \"Facetted by Country\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nInferences\n\n-   There is a clear, strong positive relationship between the average calorie content and the average fat content of dishes\n\n-   There is a substantial gap between the continents with the heaviest dishes (North America/Europe) and the lightest (Asia)\n\n-   Dishes from North America and Europe appear to have the highest average values for both calories and fat. It's suprising to find that Europe is on top of the list just below \"other\", I was expecting for it to be North America.\n\n-   Dishes from Asia, Oceania, South America, and Africa have lower average calorie and fat content. This could because of various reasons. For example, Asian cuisines often use vegetables, lean proteins, and cooking methods like steaming and stir-frying (which can use less oil), resulting in lighter meals.\n\n-   However, this graph purely looks at the dishes and their fat to calorie content and doesn't take into account their serving portions. There are also more data points for Europe than South America, meaning that the outcome for Europe is likely more accurate than the one for South America.\n\n3.  Correlation Tests\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor <- correlation::correlation(cuisines_cleaned)\ncor\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Correlation Matrix (pearson-method)\n\nParameter1    |    Parameter2 |         r |         95% CI | t(2056) |         p\n--------------------------------------------------------------------------------\ncalories      |           fat |      0.87 | [ 0.86,  0.88] |   78.98 | < .001***\ncalories      |         carbs |      0.60 | [ 0.57,  0.62] |   33.61 | < .001***\ncalories      |       protein |      0.71 | [ 0.69,  0.73] |   45.84 | < .001***\ncalories      |    avg_rating |      0.06 | [ 0.01,  0.10] |    2.56 | 0.345    \ncalories      | total_ratings | -3.34e-04 | [-0.04,  0.04] |   -0.02 | > .999   \ncalories      |       reviews |      0.01 | [-0.03,  0.05] |    0.47 | > .999   \ncalories      |     prep_time |      0.02 | [-0.03,  0.06] |    0.80 | > .999   \ncalories      |     cook_time |      0.16 | [ 0.12,  0.20] |    7.32 | < .001***\ncalories      |    total_time | -3.70e-03 | [-0.05,  0.04] |   -0.17 | > .999   \ncalories      |      servings |     -0.31 | [-0.35, -0.27] |  -14.74 | < .001***\nfat           |         carbs |      0.20 | [ 0.16,  0.24] |    9.39 | < .001***\nfat           |       protein |      0.57 | [ 0.54,  0.60] |   31.67 | < .001***\nfat           |    avg_rating |      0.09 | [ 0.05,  0.14] |    4.21 | 0.001**  \nfat           | total_ratings |      0.02 | [-0.02,  0.07] |    1.07 | > .999   \nfat           |       reviews |      0.03 | [-0.01,  0.08] |    1.49 | > .999   \nfat           |     prep_time |  4.52e-03 | [-0.04,  0.05] |    0.21 | > .999   \nfat           |     cook_time |      0.12 | [ 0.07,  0.16] |    5.29 | < .001***\nfat           |    total_time |     -0.02 | [-0.06,  0.03] |   -0.71 | > .999   \nfat           |      servings |     -0.24 | [-0.28, -0.20] |  -11.17 | < .001***\ncarbs         |       protein |      0.15 | [ 0.11,  0.19] |    6.88 | < .001***\ncarbs         |    avg_rating |     -0.04 | [-0.08,  0.01] |   -1.68 | > .999   \ncarbs         | total_ratings |     -0.05 | [-0.09, -0.01] |   -2.34 | 0.580    \ncarbs         |       reviews |     -0.04 | [-0.08,  0.00] |   -1.84 | > .999   \ncarbs         |     prep_time |      0.01 | [-0.03,  0.05] |    0.48 | > .999   \ncarbs         |     cook_time |      0.05 | [ 0.00,  0.09] |    2.11 | > .999   \ncarbs         |    total_time |  7.32e-03 | [-0.04,  0.05] |    0.33 | > .999   \ncarbs         |      servings |     -0.18 | [-0.22, -0.14] |   -8.20 | < .001***\nprotein       |    avg_rating |      0.05 | [ 0.01,  0.10] |    2.49 | 0.416    \nprotein       | total_ratings |      0.04 | [-0.01,  0.08] |    1.60 | > .999   \nprotein       |       reviews |      0.03 | [-0.01,  0.08] |    1.54 | > .999   \nprotein       |     prep_time |      0.03 | [-0.01,  0.08] |    1.56 | > .999   \nprotein       |     cook_time |      0.23 | [ 0.19,  0.27] |   10.54 | < .001***\nprotein       |    total_time |  7.44e-03 | [-0.04,  0.05] |    0.34 | > .999   \nprotein       |      servings |     -0.29 | [-0.33, -0.25] |  -13.96 | < .001***\navg_rating    | total_ratings |      0.09 | [ 0.04,  0.13] |    3.94 | 0.003**  \navg_rating    |       reviews |      0.11 | [ 0.06,  0.15] |    4.82 | < .001***\navg_rating    |     prep_time |  8.33e-03 | [-0.03,  0.05] |    0.38 | > .999   \navg_rating    |     cook_time |      0.01 | [-0.03,  0.05] |    0.51 | > .999   \navg_rating    |    total_time |      0.05 | [ 0.01,  0.10] |    2.40 | 0.506    \navg_rating    |      servings |     -0.06 | [-0.10, -0.02] |   -2.77 | 0.192    \ntotal_ratings |       reviews |      0.76 | [ 0.74,  0.78] |   53.28 | < .001***\ntotal_ratings |     prep_time |     -0.02 | [-0.07,  0.02] |   -1.06 | > .999   \ntotal_ratings |     cook_time |      0.02 | [-0.03,  0.06] |    0.82 | > .999   \ntotal_ratings |    total_time |     -0.02 | [-0.06,  0.03] |   -0.74 | > .999   \ntotal_ratings |      servings |     -0.03 | [-0.08,  0.01] |   -1.58 | > .999   \nreviews       |     prep_time |     -0.02 | [-0.07,  0.02] |   -1.13 | > .999   \nreviews       |     cook_time | -4.88e-03 | [-0.05,  0.04] |   -0.22 | > .999   \nreviews       |    total_time |     -0.03 | [-0.07,  0.02] |   -1.19 | > .999   \nreviews       |      servings |     -0.04 | [-0.08,  0.00] |   -1.88 | > .999   \nprep_time     |     cook_time |      0.03 | [-0.02,  0.07] |    1.24 | > .999   \nprep_time     |    total_time |      0.11 | [ 0.07,  0.16] |    5.15 | < .001***\nprep_time     |      servings |      0.07 | [ 0.03,  0.12] |    3.39 | 0.025*   \ncook_time     |    total_time |      0.12 | [ 0.08,  0.16] |    5.49 | < .001***\ncook_time     |      servings |     -0.03 | [-0.08,  0.01] |   -1.46 | > .999   \ntotal_time    |      servings |      0.21 | [ 0.17,  0.25] |    9.79 | < .001***\n\np-value adjustment method: Holm (1979)\nObservations: 2058\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor %>%\n  filter(Parameter1 == \"protein\") %>%\n  gf_errorbar(CI_low + CI_high ~ reorder(Parameter2, r),\n    width = 0.5\n  ) %>%\n  gf_point(r ~ reorder(Parameter2, r), size = 4, color = \"red\") %>%\n  gf_hline(yintercept = 0, color = \"grey\", linewidth = 2) %>%\n  gf_labs(\n    title = \"Correlation Errorbar Chart\",\n    subtitle = \"Target variable: Protein\",\n    x = \"Predictor Variable\",\n    y = \"Correlation Score with Protein\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGGally::ggpairs(\n  cuisines_cleaned %>% drop_na(),\n  # Select Quant variables only for now\n  columns = c(\n    \"calories\", \"fat\", \"carbs\", \"protein\", \"avg_rating\", \"total_ratings\", \"reviews\", \"prep_time\", \"cook_time\", \"total_time\"\n  ),\n  switch = \"both\",\n  # axis labels in more traditional locations(left and bottom)\n\n  progress = FALSE,\n  # no compute progress messages needed\n\n  # Choose the diagonal graphs (always single variable! Think!)\n  diag = list(continuous = \"barDiag\"),\n  # choosing histogram,not density\n\n  # Choose lower triangle graphs, two-variable graphs\n  lower = list(continuous = wrap(\"smooth\", alpha = 0.3, se = FALSE)),\n  title = \"Correlations amongst quant variables in Cuisines Dataset\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::cor_test(calories ~ protein, data = cuisines_cleaned) %>%\n  broom::tidy() %>%\n  knitr::kable(\n    digits = 3,\n    caption = \"Calories vs. Protein Content\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Calories vs. Protein Content\n\n| estimate| statistic| p.value| parameter| conf.low| conf.high|method                               |alternative |\n|--------:|---------:|-------:|---------:|--------:|---------:|:------------------------------------|:-----------|\n|    0.711|    45.836|       0|      2056|    0.689|     0.732|Pearson's product-moment correlation |two.sided   |\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##High-protein dishes tend to have higher calorie counts\ncuisines_cleaned %>% \ngf_point(protein ~ calories, color = ~fat, data = cuisines_cleaned) %>%\ngf_refine(scale_color_gradient(low = \"blue\", high = \"red\"))%>% \n   gf_lm() %>%\n  gf_labs(\n    title = \"Plot 3A: Protein vs. Fat against Calories\"\n  ) %>% \n  gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nInferences\n\n-   The data points widen as the calorie count increases.They are not tightly clustered along a clear upward line which suggests a positive but some what distributed trend since we can find low-protein, mid-protein, and high-protein dishes at the same calorie level. The real driver that has the most affect on the number of calories per dish might actually be fat content.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::cor_test(protein ~ carbs, data = cuisines_cleaned) %>%\n  broom::tidy() %>%\n  knitr::kable(\n    digits = 3,\n    caption = \"Protein vs. Carbs Content\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Protein vs. Carbs Content\n\n| estimate| statistic| p.value| parameter| conf.low| conf.high|method                               |alternative |\n|--------:|---------:|-------:|---------:|--------:|---------:|:------------------------------------|:-----------|\n|     0.15|     6.878|       0|      2056|    0.107|     0.192|Pearson's product-moment correlation |two.sided   |\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##Are high-protein foods typically low in carbs? (Inverse relationship)\ncuisines_cleaned %>% \ngf_point(protein ~ carbs, color = ~fat, position = \"jitter\", data = cuisines_cleaned) %>%\n  gf_refine(scale_color_gradient(low = \"blue\", high = \"red\"))%>% \n   gf_lm() %>%\n  gf_labs(\n    title = \"Plot 3B: Protein vs. Carbs against Fat\"\n  ) %>% \n  gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\nInferences\n\n-   The data points are scattered widely across the plot without forming a clear upward or downward pattern. They don't cluster along a diagonal line, it's largely because of the outliers that we get a slope line but the majority of the data points are widely dispersed.\n-   A majority of the dish recepies seam to be low-protein, and low-carb recepies. I was expecting more 1 or the other but not both.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##Are high-protein foods typically low in carbs? (Inverse relationship)\ncuisines_cleaned %>% \ngf_point(cook_time ~ total_ratings, color = ~avg_rating, position = \"jitter\", data = cuisines_cleaned) %>%\n  gf_refine(scale_color_gradient(low = \"blue\", high = \"red\"))%>% \n   gf_lm() %>%\n  gf_labs(\n    title = \"Plot 3C: Cook Time vs. Total ratings against average rating\"\n  ) %>% \n  gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nInferences\n\n-   I initially thought that higher cook times might result in lower ratings (regression slope) as individuals might prefer dishes that require lower times to prepare. It's suprising to see there is actually little to in fact no correlation between the 2. This could also be a result of the number of outliers visible in this plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::cor_test(total_ratings ~ reviews, data = cuisines_cleaned) %>%\n  broom::tidy() %>%\n  knitr::kable(\n    digits = 3,\n    caption = \"Cook Time vs. Avg Rating\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Cook Time vs. Avg Rating\n\n| estimate| statistic| p.value| parameter| conf.low| conf.high|method                               |alternative |\n|--------:|---------:|-------:|---------:|--------:|---------:|:------------------------------------|:-----------|\n|    0.762|    53.278|       0|      2056|    0.743|     0.779|Pearson's product-moment correlation |two.sided   |\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>% \ngf_area(total_ratings ~ reviews, fill = ~continent, position = \"jitter\", alpha = 0.4, data = cuisines_cleaned) %>%\n  gf_labs(\n    title = \"Plot 3C: Total Ratings vs. Reviews\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuisines_cleaned %>% \ngf_area(total_ratings ~ reviews | continent, fill = ~continent, data = cuisines_cleaned) %>%\n  gf_labs(\n    title = \"Plot 3D: Total Ratings vs. Reviews\",\n    subtitle = \"facetted by continent\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-A2-Cuisine_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\nInferences\n\n-   It's clear that total ratings and reviews have a strong positve correlation, suggesting that the number of readers who've rated the dish also most likely left a review for it.\n-   The plot also suggests either more popular dishes, more users, or more active reviewing culture exists in North America. Asia and Europe also come really close to this. It could also be because some cuisines might be more universally appealing drawing in more attention.\n",
    "supporting": [
      "EDA-A2-Cuisine_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
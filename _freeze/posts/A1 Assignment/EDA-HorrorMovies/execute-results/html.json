{
  "hash": "26a3ec8621175f1da186e88529190706",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EDA-HorrorMovies\"\nauthor: \"Shruthi Challa\"\neditor: visual\n---\n\n[**How did the Experiment take place?**]{.underline}\n\nA continuous experiment where a certain number of horror movies were selected and random horror movie watchers' heart rates from examined throughout the time they watched the movie.\n\n[**What would make this dataset better?**]{.underline}\n\nIf the experiment also documented factors like ages, genders, time frames of the films and so on.\n\n[**Overall Summary**]{.underline}\n\nThe Horror Movie data, which majorly explores quantitative data, is suprising in many ways. We have seen how higher/lower scare scores don't really reflect through rotten tomato's reviews and vice versa. How the different measured forms of heart rates can act as dependant variables, how scare scores are significantly higher for movies without sequels. We also went onto explore what might be the scariest movie alive! Interesting huh, go on read more...\n\n[**Set Up**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Setup\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Our all-in-one package\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr) # Looking at data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visdat) # Mapping missing data\nlibrary(naniar) # Missing data visualization and munging\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'naniar'\n\nThe following object is masked from 'package:skimr':\n\n    n_complete\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(janitor) # Clean the data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tinytable) # Printing Tables for our data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tinytable'\n\nThe following object is masked from 'package:ggplot2':\n\n    theme_void\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(ggridges)\n##library(GGally)\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncorrplot 0.95 loaded\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(corrgram)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'corrgram'\n\nThe following object is masked from 'package:lattice':\n\n    panel.fill\n```\n\n\n:::\n:::\n\n\n[**Read Data & Examine Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading & Inspecting Horror Movies Dataset\nhorrormovies <- readr::read_csv(\"../data/HorrorMoviedata.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 50 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Movie, This film is a sequel., This film has at least one sequel\ndbl (9): Ranking, Avg resting heart rate (BPM), Avg movie heart rate (BPM), ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhorrormovies <- readr::read_delim(\"../data/HorrorMoviedata.csv\", delim = \",\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 50 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Movie, This film is a sequel., This film has at least one sequel\ndbl (9): Ranking, Avg resting heart rate (BPM), Avg movie heart rate (BPM), ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nbase::names(horrormovies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Ranking\"                           \"Movie\"                            \n [3] \"Avg resting heart rate (BPM)\"      \"Avg movie heart rate (BPM)\"       \n [5] \"Overall difference (BPM)\"          \"HRV Difference (%)\"               \n [7] \"Highest spike (BPM)\"               \"Scare Score\"                      \n [9] \"This film is a sequel.\"            \"This film has at least one sequel\"\n[11] \"Rotten Tomato score\"               \"Year\"                             \n```\n\n\n:::\n\n```{.r .cell-code}\ndplyr::glimpse(horrormovies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 50\nColumns: 12\n$ Ranking                             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,…\n$ Movie                               <chr> \"Sinister\", \"Host\", \"Skinamirink\",…\n$ `Avg resting heart rate (BPM)`      <dbl> 64, 64, 64, 64, 64, 64, 64, 64, 64…\n$ `Avg movie heart rate (BPM)`        <dbl> 86, 88, 84, 85, 84, 82, 83, 82, 81…\n$ `Overall difference (BPM)`          <dbl> 22, 24, 20, 21, 20, 18, 19, 18, 17…\n$ `HRV Difference (%)`                <dbl> 21, 18, 22, 18, 18, 19, 15, 17, 16…\n$ `Highest spike (BPM)`               <dbl> 131, 130, 113, 133, 132, 104, 114,…\n$ `Scare Score`                       <dbl> 96, 95, 91, 90, 88, 81, 78, 76, 75…\n$ `This film is a sequel.`            <chr> \"no\", \"no\", \"no\", \"no\", \"no\", \"no\"…\n$ `This film has at least one sequel` <chr> \"yes\", \"no\", \"no\", \"yes\", \"yes\", \"…\n$ `Rotten Tomato score`               <dbl> 63, 99, 72, 67, 86, 90, 79, 45, 75…\n$ Year                                <dbl> 2012, 2020, 2022, 2010, 2013, 2018…\n```\n\n\n:::\n\n```{.r .cell-code}\nbase::dim(horrormovies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50 12\n```\n\n\n:::\n\n```{.r .cell-code}\nutils::str(horrormovies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [50 × 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Ranking                          : num [1:50] 1 2 3 4 5 6 7 8 9 10 ...\n $ Movie                            : chr [1:50] \"Sinister\" \"Host\" \"Skinamirink\" \"Insidious\" ...\n $ Avg resting heart rate (BPM)     : num [1:50] 64 64 64 64 64 64 64 64 64 64 ...\n $ Avg movie heart rate (BPM)       : num [1:50] 86 88 84 85 84 82 83 82 81 79 ...\n $ Overall difference (BPM)         : num [1:50] 22 24 20 21 20 18 19 18 17 18 ...\n $ HRV Difference (%)               : num [1:50] 21 18 22 18 18 19 15 17 16 15 ...\n $ Highest spike (BPM)              : num [1:50] 131 130 113 133 132 104 114 96 107 106 ...\n $ Scare Score                      : num [1:50] 96 95 91 90 88 81 78 76 75 75 ...\n $ This film is a sequel.           : chr [1:50] \"no\" \"no\" \"no\" \"no\" ...\n $ This film has at least one sequel: chr [1:50] \"yes\" \"no\" \"no\" \"yes\" ...\n $ Rotten Tomato score              : num [1:50] 63 99 72 67 86 90 79 45 75 95 ...\n $ Year                             : num [1:50] 2012 2020 2022 2010 2013 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Ranking = col_double(),\n  ..   Movie = col_character(),\n  ..   `Avg resting heart rate (BPM)` = col_double(),\n  ..   `Avg movie heart rate (BPM)` = col_double(),\n  ..   `Overall difference (BPM)` = col_double(),\n  ..   `HRV Difference (%)` = col_double(),\n  ..   `Highest spike (BPM)` = col_double(),\n  ..   `Scare Score` = col_double(),\n  ..   `This film is a sequel.` = col_character(),\n  ..   `This film has at least one sequel` = col_character(),\n  ..   `Rotten Tomato score` = col_double(),\n  ..   Year = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n\n```{.r .cell-code}\nhorrormovies\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 12\n   Ranking Movie                   Avg resting heart ra…¹ Avg movie heart rate…²\n     <dbl> <chr>                                    <dbl>                  <dbl>\n 1       1 Sinister                                    64                     86\n 2       2 Host                                        64                     88\n 3       3 Skinamirink                                 64                     84\n 4       4 Insidious                                   64                     85\n 5       5 The Conjuring                               64                     84\n 6       6 Hereditary                                  64                     82\n 7       7 Smile                                       64                     83\n 8       8 The Excorcism of Emily…                     64                     82\n 9       9 Hell House LLC                              64                     81\n10      10 Talk To Me                                  64                     79\n# ℹ 40 more rows\n# ℹ abbreviated names: ¹​`Avg resting heart rate (BPM)`,\n#   ²​`Avg movie heart rate (BPM)`\n# ℹ 8 more variables: `Overall difference (BPM)` <dbl>,\n#   `HRV Difference (%)` <dbl>, `Highest spike (BPM)` <dbl>,\n#   `Scare Score` <dbl>, `This film is a sequel.` <chr>,\n#   `This film has at least one sequel` <chr>, `Rotten Tomato score` <dbl>, …\n```\n\n\n:::\n:::\n\n\n[**Clean Data**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified <- horrormovies %>%\n  janitor::clean_names(case = \"snake\") # clean names\n\nhorrormovies_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 12\n   ranking movie                   avg_resting_heart_ra…¹ avg_movie_heart_rate…²\n     <dbl> <chr>                                    <dbl>                  <dbl>\n 1       1 Sinister                                    64                     86\n 2       2 Host                                        64                     88\n 3       3 Skinamirink                                 64                     84\n 4       4 Insidious                                   64                     85\n 5       5 The Conjuring                               64                     84\n 6       6 Hereditary                                  64                     82\n 7       7 Smile                                       64                     83\n 8       8 The Excorcism of Emily…                     64                     82\n 9       9 Hell House LLC                              64                     81\n10      10 Talk To Me                                  64                     79\n# ℹ 40 more rows\n# ℹ abbreviated names: ¹​avg_resting_heart_rate_bpm, ²​avg_movie_heart_rate_bpm\n# ℹ 8 more variables: overall_difference_bpm <dbl>,\n#   hrv_difference_percent <dbl>, highest_spike_bpm <dbl>, scare_score <dbl>,\n#   this_film_is_a_sequel <chr>, this_film_has_at_least_one_sequel <chr>,\n#   rotten_tomato_score <dbl>, year <dbl>\n```\n\n\n:::\n:::\n\n\n[**Visualize for Missing Data (No missing data found)**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisdat::vis_dat(horrormovies_modified)\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n[**Data Munging**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 <- horrormovies_modified %>%\n  mutate(\n    this_film_is_a_sequel = as.factor(this_film_is_a_sequel),\n    this_film_has_at_least_one_sequel = as.factor(this_film_has_at_least_one_sequel),\n  ) %>%\n  ##rename(\"dish\" = item) %>% # rename item to dish\n\n  # arrange the Qual variables first, Quant next\n  dplyr::relocate(where(is.factor), .after = ranking)\n\nhorrormovies_modified2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 12\n   ranking this_film_is_a_sequel this_film_has_at_least_one_sequel movie        \n     <dbl> <fct>                 <fct>                             <chr>        \n 1       1 no                    yes                               Sinister     \n 2       2 no                    no                                Host         \n 3       3 no                    no                                Skinamirink  \n 4       4 no                    yes                               Insidious    \n 5       5 no                    yes                               The Conjuring\n 6       6 no                    no                                Hereditary   \n 7       7 no                    no                                Smile        \n 8       8 no                    no                                The Excorcis…\n 9       9 no                    yes                               Hell House L…\n10      10 no                    no                                Talk To Me   \n# ℹ 40 more rows\n# ℹ 8 more variables: avg_resting_heart_rate_bpm <dbl>,\n#   avg_movie_heart_rate_bpm <dbl>, overall_difference_bpm <dbl>,\n#   hrv_difference_percent <dbl>, highest_spike_bpm <dbl>, scare_score <dbl>,\n#   rotten_tomato_score <dbl>, year <dbl>\n```\n\n\n:::\n:::\n\n\n[**Data Dictionary**]{.underline}\n\n| Variable | Class | Description |\n|----|----|----|\n| Ranking | double | The overall ranking given to that movie amongst all the movies in the list |\n| This film is a sequel | factor | Specifies whether this film is a sequel or not |\n| This film has atleast 1 sequel | factor | Specifies whether this film has atleast 1 sequel |\n| Movie | character | Movie name |\n| Avg Resting bpm | double | Average resting bpm of movie watchers recorded before the start of the movie |\n| Avg Movie bpm | double | Average bpm of movie watchers while watching the movie |\n| Overall Difference | double | Difference seen between Avg resting bpm and Avg movie bpm |\n| HRV Difference % | double | The fluctuation in the time interval between heartbeats as a percentage |\n| Highest Spiked bpm | double | Highest bpm of movie watchers recorded during the movie |\n| Scare Score | double | How scary was the movie, given by movie watchers |\n| Rotten Tomato Score | double | Published rating score given by Rotten Tomatoes |\n| Year | double | Year of Movie release |\n\n[**Tiny Table**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  head(10) %>%\n  tinytable::tt(caption = \"Horror Movie Data (Clean)\") %>%\n  tinytable::theme_html(class = \"table table-hover table-striped table-condensed\") %>%\n  style_tt(fontsize = 0.8) %>%\n  stats::setNames(c(\"Rankings\", \"This Film is a Sequel\", \"Atleast 1 Sequel\", \"Movie\", \"Avg Resting BPM\", \"Avg Movie BPM\", \"Overall Diff\", \"HRV Diff%\", \"Highest Spiked BPM\", \"Scare Score\", \"Rotten Tomato Score\", \"Year\"))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_4gym1thu5aocytqte10q(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_4gym1thu5aocytqte10q\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_4gym1thu5aocytqte10q(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_4gym1thu5aocytqte10q\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '10', j: 1 }, { i: '10', j: 4 }, { i: '10', j: 5 }, { i: '10', j: 3 }, { i: '10', j: 10 }, { i: '10', j: 2 }, { i: '10', j: 9 }, { i: '10', j: 7 }, { i: '10', j: 8 }, { i: '10', j: 6 }, { i: '10', j: 0 }, { i: '10', j: 11 },  ], css_id: 'tinytable_css_9iv2l80uy2wxu03ev4nm',}, \n          { positions: [ { i: '6', j: 4 }, { i: '3', j: 0 }, { i: '3', j: 1 }, { i: '2', j: 0 }, { i: '1', j: 1 }, { i: '5', j: 0 }, { i: '7', j: 1 }, { i: '6', j: 0 }, { i: '5', j: 1 }, { i: '6', j: 5 }, { i: '9', j: 0 }, { i: '1', j: 2 }, { i: '7', j: 0 }, { i: '3', j: 2 }, { i: '2', j: 1 }, { i: '5', j: 2 }, { i: '6', j: 2 }, { i: '7', j: 2 }, { i: '6', j: 1 }, { i: '9', j: 2 }, { i: '6', j: 6 }, { i: '9', j: 1 }, { i: '1', j: 3 }, { i: '2', j: 3 }, { i: '3', j: 3 }, { i: '2', j: 2 }, { i: '5', j: 3 }, { i: '6', j: 3 }, { i: '7', j: 3 }, { i: '1', j: 0 }, { i: '9', j: 3 }, { i: '6', j: 7 }, { i: '4', j: 0 }, { i: '1', j: 4 }, { i: '2', j: 4 }, { i: '3', j: 4 }, { i: '8', j: 0 }, { i: '5', j: 4 }, { i: '2', j: 8 }, { i: '7', j: 4 }, { i: '8', j: 4 }, { i: '9', j: 4 }, { i: '6', j: 8 }, { i: '4', j: 1 }, { i: '1', j: 5 }, { i: '2', j: 5 }, { i: '3', j: 5 }, { i: '8', j: 1 }, { i: '5', j: 5 }, { i: '2', j: 9 }, { i: '7', j: 5 }, { i: '8', j: 5 }, { i: '9', j: 5 }, { i: '6', j: 9 }, { i: '4', j: 2 }, { i: '1', j: 6 }, { i: '2', j: 6 }, { i: '3', j: 6 }, { i: '8', j: 2 }, { i: '5', j: 6 }, { i: '2', j: 10 }, { i: '7', j: 6 }, { i: '8', j: 6 }, { i: '9', j: 6 }, { i: '6', j: 10 }, { i: '4', j: 3 }, { i: '1', j: 7 }, { i: '2', j: 7 }, { i: '3', j: 7 }, { i: '8', j: 3 }, { i: '5', j: 7 }, { i: '2', j: 11 }, { i: '7', j: 7 }, { i: '8', j: 7 }, { i: '9', j: 7 }, { i: '6', j: 11 }, { i: '4', j: 4 }, { i: '1', j: 8 }, { i: '9', j: 11 }, { i: '3', j: 8 }, { i: '4', j: 8 }, { i: '5', j: 8 }, { i: '8', j: 9 }, { i: '7', j: 8 }, { i: '8', j: 8 }, { i: '9', j: 8 }, { i: '1', j: 10 }, { i: '4', j: 5 }, { i: '1', j: 9 }, { i: '4', j: 10 }, { i: '3', j: 9 }, { i: '4', j: 9 }, { i: '5', j: 9 }, { i: '8', j: 10 }, { i: '7', j: 9 }, { i: '3', j: 11 }, { i: '9', j: 9 }, { i: '1', j: 11 }, { i: '4', j: 6 }, { i: '5', j: 10 }, { i: '4', j: 11 }, { i: '3', j: 10 }, { i: '5', j: 11 }, { i: '9', j: 10 }, { i: '8', j: 11 }, { i: '7', j: 10 }, { i: '7', j: 11 }, { i: '4', j: 7 },  ], css_id: 'tinytable_css_2cmufvfgzrxmeuy34cgm',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 11 }, { i: '0', j: 5 }, { i: '0', j: 3 }, { i: '0', j: 4 }, { i: '0', j: 2 }, { i: '0', j: 9 }, { i: '0', j: 1 }, { i: '0', j: 8 }, { i: '0', j: 6 }, { i: '0', j: 7 }, { i: '0', j: 10 },  ], css_id: 'tinytable_css_0325xev96bq3q7s1dj0p',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_4gym1thu5aocytqte10q(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_9iv2l80uy2wxu03ev4nm, .table th.tinytable_css_9iv2l80uy2wxu03ev4nm { font-size: 0.8em; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_2cmufvfgzrxmeuy34cgm, .table th.tinytable_css_2cmufvfgzrxmeuy34cgm { font-size: 0.8em; }\n      .table td.tinytable_css_0325xev96bq3q7s1dj0p, .table th.tinytable_css_0325xev96bq3q7s1dj0p { font-size: 0.8em; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-hover table-striped table-condensed\" id=\"tinytable_4gym1thu5aocytqte10q\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Horror Movie Data (Clean)</caption>\n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">Rankings</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">This Film is a Sequel</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">Atleast 1 Sequel</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">Movie</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">Avg Resting BPM</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">Avg Movie BPM</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"6\">Overall Diff</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"7\">HRV Diff%</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"8\">Highest Spiked BPM</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"9\">Scare Score</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"10\">Rotten Tomato Score</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"11\">Year</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">1</td>\n                  <td data-row=\"1\" data-col=\"1\">no</td>\n                  <td data-row=\"1\" data-col=\"2\">yes</td>\n                  <td data-row=\"1\" data-col=\"3\">Sinister</td>\n                  <td data-row=\"1\" data-col=\"4\">64</td>\n                  <td data-row=\"1\" data-col=\"5\">86</td>\n                  <td data-row=\"1\" data-col=\"6\">22</td>\n                  <td data-row=\"1\" data-col=\"7\">21</td>\n                  <td data-row=\"1\" data-col=\"8\">131</td>\n                  <td data-row=\"1\" data-col=\"9\">96</td>\n                  <td data-row=\"1\" data-col=\"10\">63</td>\n                  <td data-row=\"1\" data-col=\"11\">2012</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">2</td>\n                  <td data-row=\"2\" data-col=\"1\">no</td>\n                  <td data-row=\"2\" data-col=\"2\">no</td>\n                  <td data-row=\"2\" data-col=\"3\">Host</td>\n                  <td data-row=\"2\" data-col=\"4\">64</td>\n                  <td data-row=\"2\" data-col=\"5\">88</td>\n                  <td data-row=\"2\" data-col=\"6\">24</td>\n                  <td data-row=\"2\" data-col=\"7\">18</td>\n                  <td data-row=\"2\" data-col=\"8\">130</td>\n                  <td data-row=\"2\" data-col=\"9\">95</td>\n                  <td data-row=\"2\" data-col=\"10\">99</td>\n                  <td data-row=\"2\" data-col=\"11\">2020</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">3</td>\n                  <td data-row=\"3\" data-col=\"1\">no</td>\n                  <td data-row=\"3\" data-col=\"2\">no</td>\n                  <td data-row=\"3\" data-col=\"3\">Skinamirink</td>\n                  <td data-row=\"3\" data-col=\"4\">64</td>\n                  <td data-row=\"3\" data-col=\"5\">84</td>\n                  <td data-row=\"3\" data-col=\"6\">20</td>\n                  <td data-row=\"3\" data-col=\"7\">22</td>\n                  <td data-row=\"3\" data-col=\"8\">113</td>\n                  <td data-row=\"3\" data-col=\"9\">91</td>\n                  <td data-row=\"3\" data-col=\"10\">72</td>\n                  <td data-row=\"3\" data-col=\"11\">2022</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">4</td>\n                  <td data-row=\"4\" data-col=\"1\">no</td>\n                  <td data-row=\"4\" data-col=\"2\">yes</td>\n                  <td data-row=\"4\" data-col=\"3\">Insidious</td>\n                  <td data-row=\"4\" data-col=\"4\">64</td>\n                  <td data-row=\"4\" data-col=\"5\">85</td>\n                  <td data-row=\"4\" data-col=\"6\">21</td>\n                  <td data-row=\"4\" data-col=\"7\">18</td>\n                  <td data-row=\"4\" data-col=\"8\">133</td>\n                  <td data-row=\"4\" data-col=\"9\">90</td>\n                  <td data-row=\"4\" data-col=\"10\">67</td>\n                  <td data-row=\"4\" data-col=\"11\">2010</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">5</td>\n                  <td data-row=\"5\" data-col=\"1\">no</td>\n                  <td data-row=\"5\" data-col=\"2\">yes</td>\n                  <td data-row=\"5\" data-col=\"3\">The Conjuring</td>\n                  <td data-row=\"5\" data-col=\"4\">64</td>\n                  <td data-row=\"5\" data-col=\"5\">84</td>\n                  <td data-row=\"5\" data-col=\"6\">20</td>\n                  <td data-row=\"5\" data-col=\"7\">18</td>\n                  <td data-row=\"5\" data-col=\"8\">132</td>\n                  <td data-row=\"5\" data-col=\"9\">88</td>\n                  <td data-row=\"5\" data-col=\"10\">86</td>\n                  <td data-row=\"5\" data-col=\"11\">2013</td>\n                </tr>\n                <tr>\n                  <td data-row=\"6\" data-col=\"0\">6</td>\n                  <td data-row=\"6\" data-col=\"1\">no</td>\n                  <td data-row=\"6\" data-col=\"2\">no</td>\n                  <td data-row=\"6\" data-col=\"3\">Hereditary</td>\n                  <td data-row=\"6\" data-col=\"4\">64</td>\n                  <td data-row=\"6\" data-col=\"5\">82</td>\n                  <td data-row=\"6\" data-col=\"6\">18</td>\n                  <td data-row=\"6\" data-col=\"7\">19</td>\n                  <td data-row=\"6\" data-col=\"8\">104</td>\n                  <td data-row=\"6\" data-col=\"9\">81</td>\n                  <td data-row=\"6\" data-col=\"10\">90</td>\n                  <td data-row=\"6\" data-col=\"11\">2018</td>\n                </tr>\n                <tr>\n                  <td data-row=\"7\" data-col=\"0\">7</td>\n                  <td data-row=\"7\" data-col=\"1\">no</td>\n                  <td data-row=\"7\" data-col=\"2\">no</td>\n                  <td data-row=\"7\" data-col=\"3\">Smile</td>\n                  <td data-row=\"7\" data-col=\"4\">64</td>\n                  <td data-row=\"7\" data-col=\"5\">83</td>\n                  <td data-row=\"7\" data-col=\"6\">19</td>\n                  <td data-row=\"7\" data-col=\"7\">15</td>\n                  <td data-row=\"7\" data-col=\"8\">114</td>\n                  <td data-row=\"7\" data-col=\"9\">78</td>\n                  <td data-row=\"7\" data-col=\"10\">79</td>\n                  <td data-row=\"7\" data-col=\"11\">2022</td>\n                </tr>\n                <tr>\n                  <td data-row=\"8\" data-col=\"0\">8</td>\n                  <td data-row=\"8\" data-col=\"1\">no</td>\n                  <td data-row=\"8\" data-col=\"2\">no</td>\n                  <td data-row=\"8\" data-col=\"3\">The Excorcism of Emily Rose</td>\n                  <td data-row=\"8\" data-col=\"4\">64</td>\n                  <td data-row=\"8\" data-col=\"5\">82</td>\n                  <td data-row=\"8\" data-col=\"6\">18</td>\n                  <td data-row=\"8\" data-col=\"7\">17</td>\n                  <td data-row=\"8\" data-col=\"8\">96</td>\n                  <td data-row=\"8\" data-col=\"9\">76</td>\n                  <td data-row=\"8\" data-col=\"10\">45</td>\n                  <td data-row=\"8\" data-col=\"11\">2005</td>\n                </tr>\n                <tr>\n                  <td data-row=\"9\" data-col=\"0\">9</td>\n                  <td data-row=\"9\" data-col=\"1\">no</td>\n                  <td data-row=\"9\" data-col=\"2\">yes</td>\n                  <td data-row=\"9\" data-col=\"3\">Hell House LLC</td>\n                  <td data-row=\"9\" data-col=\"4\">64</td>\n                  <td data-row=\"9\" data-col=\"5\">81</td>\n                  <td data-row=\"9\" data-col=\"6\">17</td>\n                  <td data-row=\"9\" data-col=\"7\">16</td>\n                  <td data-row=\"9\" data-col=\"8\">107</td>\n                  <td data-row=\"9\" data-col=\"9\">75</td>\n                  <td data-row=\"9\" data-col=\"10\">75</td>\n                  <td data-row=\"9\" data-col=\"11\">2015</td>\n                </tr>\n                <tr>\n                  <td data-row=\"10\" data-col=\"0\">10</td>\n                  <td data-row=\"10\" data-col=\"1\">no</td>\n                  <td data-row=\"10\" data-col=\"2\">no</td>\n                  <td data-row=\"10\" data-col=\"3\">Talk To Me</td>\n                  <td data-row=\"10\" data-col=\"4\">64</td>\n                  <td data-row=\"10\" data-col=\"5\">79</td>\n                  <td data-row=\"10\" data-col=\"6\">18</td>\n                  <td data-row=\"10\" data-col=\"7\">15</td>\n                  <td data-row=\"10\" data-col=\"8\">106</td>\n                  <td data-row=\"10\" data-col=\"9\">75</td>\n                  <td data-row=\"10\" data-col=\"10\">95</td>\n                  <td data-row=\"10\" data-col=\"11\">2023</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n[**Summaries**]{.underline}\n\nThis film is a sequel \\>\\> This film has atleast 1 sequel ratios\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>% \ndplyr::count(this_film_is_a_sequel, this_film_has_at_least_one_sequel) %>%\ntt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_ajjyrhd6hysdg9dn2qr6(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_ajjyrhd6hysdg9dn2qr6\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_ajjyrhd6hysdg9dn2qr6(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_ajjyrhd6hysdg9dn2qr6\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '4', j: 0 }, { i: '4', j: 1 }, { i: '4', j: 2 },  ], css_id: 'tinytable_css_ruy4n60bac21omf6e0ap',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 1 }, { i: '0', j: 2 },  ], css_id: 'tinytable_css_fclp375rsu13pt8lfazj',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_ajjyrhd6hysdg9dn2qr6(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_ruy4n60bac21omf6e0ap, .table th.tinytable_css_ruy4n60bac21omf6e0ap { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_fclp375rsu13pt8lfazj, .table th.tinytable_css_fclp375rsu13pt8lfazj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_ajjyrhd6hysdg9dn2qr6\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">this_film_is_a_sequel</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">this_film_has_at_least_one_sequel</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">n</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">no</td>\n                  <td data-row=\"1\" data-col=\"1\">no</td>\n                  <td data-row=\"1\" data-col=\"2\">20</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">no</td>\n                  <td data-row=\"2\" data-col=\"1\">yes</td>\n                  <td data-row=\"2\" data-col=\"2\">20</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">yes</td>\n                  <td data-row=\"3\" data-col=\"1\">no</td>\n                  <td data-row=\"3\" data-col=\"2\">3</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">yes</td>\n                  <td data-row=\"4\" data-col=\"1\">yes</td>\n                  <td data-row=\"4\" data-col=\"2\">7</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\nNumber of films released each year\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Counting by the obvious factor variables\nhorrormovies_modified2 %>%\n  dplyr::count(year) %>%\n  tt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_uda9mwdr0ofokts13iov(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_uda9mwdr0ofokts13iov\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_uda9mwdr0ofokts13iov(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_uda9mwdr0ofokts13iov\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '23', j: 0 }, { i: '23', j: 1 },  ], css_id: 'tinytable_css_gahkkb65zakonk3mfff4',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 1 },  ], css_id: 'tinytable_css_c7rmpf32lzclgzy1b96d',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_uda9mwdr0ofokts13iov(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_gahkkb65zakonk3mfff4, .table th.tinytable_css_gahkkb65zakonk3mfff4 { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_c7rmpf32lzclgzy1b96d, .table th.tinytable_css_c7rmpf32lzclgzy1b96d { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_uda9mwdr0ofokts13iov\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">year</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">n</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">1973</td>\n                  <td data-row=\"1\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">1974</td>\n                  <td data-row=\"2\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">1978</td>\n                  <td data-row=\"3\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">1979</td>\n                  <td data-row=\"4\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">1984</td>\n                  <td data-row=\"5\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"6\" data-col=\"0\">1996</td>\n                  <td data-row=\"6\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"7\" data-col=\"0\">1999</td>\n                  <td data-row=\"7\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"8\" data-col=\"0\">2002</td>\n                  <td data-row=\"8\" data-col=\"1\">2</td>\n                </tr>\n                <tr>\n                  <td data-row=\"9\" data-col=\"0\">2005</td>\n                  <td data-row=\"9\" data-col=\"1\">2</td>\n                </tr>\n                <tr>\n                  <td data-row=\"10\" data-col=\"0\">2007</td>\n                  <td data-row=\"10\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"11\" data-col=\"0\">2010</td>\n                  <td data-row=\"11\" data-col=\"1\">2</td>\n                </tr>\n                <tr>\n                  <td data-row=\"12\" data-col=\"0\">2011</td>\n                  <td data-row=\"12\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"13\" data-col=\"0\">2012</td>\n                  <td data-row=\"13\" data-col=\"1\">1</td>\n                </tr>\n                <tr>\n                  <td data-row=\"14\" data-col=\"0\">2013</td>\n                  <td data-row=\"14\" data-col=\"1\">3</td>\n                </tr>\n                <tr>\n                  <td data-row=\"15\" data-col=\"0\">2014</td>\n                  <td data-row=\"15\" data-col=\"1\">2</td>\n                </tr>\n                <tr>\n                  <td data-row=\"16\" data-col=\"0\">2015</td>\n                  <td data-row=\"16\" data-col=\"1\">3</td>\n                </tr>\n                <tr>\n                  <td data-row=\"17\" data-col=\"0\">2016</td>\n                  <td data-row=\"17\" data-col=\"1\">5</td>\n                </tr>\n                <tr>\n                  <td data-row=\"18\" data-col=\"0\">2017</td>\n                  <td data-row=\"18\" data-col=\"1\">2</td>\n                </tr>\n                <tr>\n                  <td data-row=\"19\" data-col=\"0\">2018</td>\n                  <td data-row=\"19\" data-col=\"1\">3</td>\n                </tr>\n                <tr>\n                  <td data-row=\"20\" data-col=\"0\">2020</td>\n                  <td data-row=\"20\" data-col=\"1\">4</td>\n                </tr>\n                <tr>\n                  <td data-row=\"21\" data-col=\"0\">2021</td>\n                  <td data-row=\"21\" data-col=\"1\">3</td>\n                </tr>\n                <tr>\n                  <td data-row=\"22\" data-col=\"0\">2022</td>\n                  <td data-row=\"22\" data-col=\"1\">4</td>\n                </tr>\n                <tr>\n                  <td data-row=\"23\" data-col=\"0\">2023</td>\n                  <td data-row=\"23\" data-col=\"1\">5</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\nSummary for Average Heart Rate bpm recorded during the Movie\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Single Variable, Multiple Summaries\nhorrormovies_modified2 %>%\n  dplyr::summarise(\n    mean_movie_bpm = mean(avg_movie_heart_rate_bpm, na.rm = T),\n    sd_movie_bpm = sd(avg_movie_heart_rate_bpm, na.rm = T),\n    min_movie_bpm = min(avg_movie_heart_rate_bpm, na.rm = T),\n    max_movie_bpm = max(avg_movie_heart_rate_bpm, na.rm = T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mean_movie_bpm sd_movie_bpm min_movie_bpm max_movie_bpm\n           <dbl>        <dbl>         <dbl>         <dbl>\n1           76.9         4.62            68            88\n```\n\n\n:::\n:::\n\n\nSummary comparison of Avg movie heart rate bpm and Highest spiked heart rate bpm\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Multiple Variables, Multiple Summaries\nhorrormovies_modified2 %>%\n  dplyr::summarise(across(\n    .cols = c(avg_movie_heart_rate_bpm, highest_spike_bpm), # select columns\n\n    .fns = list(\n      mean = ~ mean(., na.rm = T),\n      sd = sd,\n      min = min, \n      max = max\n    )\n  ))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 8\n  avg_movie_heart_rate_bpm_mean avg_movie_heart_rate_bp…¹ avg_movie_heart_rate…²\n                          <dbl>                     <dbl>                  <dbl>\n1                          76.9                      4.62                     68\n# ℹ abbreviated names: ¹​avg_movie_heart_rate_bpm_sd,\n#   ²​avg_movie_heart_rate_bpm_min\n# ℹ 5 more variables: avg_movie_heart_rate_bpm_max <dbl>,\n#   highest_spike_bpm_mean <dbl>, highest_spike_bpm_sd <dbl>,\n#   highest_spike_bpm_min <dbl>, highest_spike_bpm_max <dbl>\n```\n\n\n:::\n:::\n\n\n[**PLOT 1**]{.underline} [**Number of Horror Movies released over the years**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>% \n  gf_bar(~year) %>% \n    gf_labs(\n    title = \"Plot 1\",\n    subtitle = \"Number of horror movies released has increased over the years\",\n    x = \"Year\", y = \"Number of Movies Released\"\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<ggproto object: Class ScaleDiscrete, Scale, gg>\n    aesthetics: fill\n    axis_order: function\n    break_info: function\n    break_positions: function\n    breaks: waiver\n    call: call\n    clone: function\n    dimension: function\n    drop: TRUE\n    expand: waiver\n    get_breaks: function\n    get_breaks_minor: function\n    get_labels: function\n    get_limits: function\n    get_transformation: function\n    guide: legend\n    is_discrete: function\n    is_empty: function\n    labels: waiver\n    limits: NULL\n    make_sec_title: function\n    make_title: function\n    map: function\n    map_df: function\n    minor_breaks: waiver\n    n.breaks.cache: NULL\n    na.translate: TRUE\n    na.value: NA\n    name: waiver\n    palette: function\n    palette.cache: NULL\n    position: left\n    range: environment\n    rescale: function\n    reset: function\n    train: function\n    train_df: function\n    transform: function\n    transform_df: function\n    super:  <ggproto object: Class ScaleDiscrete, Scale, gg>\n```\n\n\n:::\n:::\n\n\n[**What did I find Suprising?**]{.underline}\n\nNot much is suprising here, it's natural to see a higher number of horror movies being released over the years as people gain access to newer technologies, however it is interesting to see gaps within this graph especially between 1985 and 1995 when not a single Horror movie had been released, an entire Decade with no movie! What traumatized people back then to not make a single horror movie for an entire decade I wonder?\n\n[**PLOT 2A**]{.underline} [**Hypothesis: Do higher scare scores mean higher rotten tomato scores?**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  gf_line(rotten_tomato_score ~ scare_score) %>%\n  gf_labs(title = \"Plot 2A\", \n          subtitle = \"There is no relation between the scare score and the rotten tomato ratings\"\n          ) %>%\n  gf_theme(theme(axis.text.x = element_text(\n    size = 6,\n    angle = 45, hjust = 0.5\n  ))) %>%\n gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n[**PLOT 2B**]{.underline} [**Hypothesis: Do higher scare scores mean higher rotten tomato scores?**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  tidyr::drop_na() %>%\n  gf_point(rotten_tomato_score ~ scare_score,\n    colour = ~this_film_is_a_sequel,\n  ) %>%\ngf_labs(title = \"Plot 2B\", \n          subtitle = \"There is no relation between the scare score and the rotten tomato ratings + movies with the highest rotten tomato score were not sequals\"\n          ) %>%\n  gf_theme(theme(axis.text.x = element_text(\n    size = 6,\n    angle = 45, hjust = 0.5\n  ))) %>%\n gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n[**What did I find Suprising?**]{.underline}\n\nIt's interesting to find that the Scare scores do not corelate with the Rotten Tomato Scores thus proving the hypothesis wrong!\n\n[**PLOT 3**]{.underline} [**Distribution of Avg Movie heart rate bpm across film types**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Ask Arvind about gf_theme\nhorrormovies_modified2 %>%\n  gf_point(movie~avg_movie_heart_rate_bpm,\n    colour = ~this_film_is_a_sequel,\n    ##shape = ~this_film_has_at_least_one_sequel,\n    size = 2, data = .\n  ) %>%\n  gf_labs(\n    title = \"Plot 3\",\n    x = \"Avg Heart BPM\",\n    y = \"Movie Name\"\n    ) %>%\n  # Use same name for scales to merge legends\n  gf_refine(\n    scale_color_brewer(\n      name = \"Legend = Is it a Sequel?\",\n      palette = \"Set1\"\n    ),\n    scale_shape_manual(\n      name = \"Legend = It has a Sequel?\",\n      values = c(15:21)\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n[**What did I find Suprising?**]{.underline}\n\nStand alone horror films have either higher or lower avg heart rate bpm while the movies which are sequels' avg movie heart rate bpm fall into one section. This could be because movie watchers who have watched the orginal know what to expect from the franchaise.\n\n[**PLOT 4**]{.underline} [**What is the best Horror Movie based on Highest Heart bpm, Rotten Tomato Score, and Scare Score?**]{.underline}\n\nUnderstanding which films have the highest Rotten Tomato Scores\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  count(rotten_tomato_score) %>%\n  arrange(desc(rotten_tomato_score)) %>%\n  top_n(3, n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n  rotten_tomato_score     n\n                <dbl> <int>\n1                  95     3\n2                  93     3\n3                  86     4\n4                  75     3\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%     filter(rotten_tomato_score==\"95\") %>% \ngf_point(movie ~ rotten_tomato_score,\n    colour = ~this_film_is_a_sequel,\n    shape = ~this_film_has_at_least_one_sequel,\n    size = 4\n  ) %>% \ngf_labs(\n    title = \"Plot 4A\",\n    x = \"Rotten Tomato Score\",\n    y = \"Movie Name\"\n    )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nUnderstanding which films have the highest Scare Scores?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  count(scare_score) %>%\n  arrange(desc(scare_score)) %>%\n  top_n(3, n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  scare_score     n\n        <dbl> <int>\n1          74     4\n2          64     4\n3          62     3\n4          51     3\n5          42     3\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%     filter(scare_score==\"74\") %>% \ngf_point(movie ~ scare_score,\n    colour = ~this_film_is_a_sequel,\n    shape = ~this_film_has_at_least_one_sequel,\n    size = 4\n  ) %>% \n  gf_labs(\n    title = \"Plot 4B\",\n    x = \"Rotten Tomato Score\",\n    y = \"Movie Name\"\n    )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nUnderstanding which Horror Movies give off the highest spiked Heart Rates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  count(highest_spike_bpm) %>%\n  arrange(desc(highest_spike_bpm)) %>%\n  top_n(3, n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  highest_spike_bpm     n\n              <dbl> <int>\n1               114     2\n2               103     2\n3                96     2\n4                93     2\n5                92     2\n6                91     2\n7                90     2\n8                89     4\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%     filter(highest_spike_bpm ==\"114\"| highest_spike_bpm == \"103\" | highest_spike_bpm == \"96\") %>% \ngf_point(movie ~ highest_spike_bpm,\n    colour = ~this_film_is_a_sequel,\n    shape = ~this_film_has_at_least_one_sequel,\n    size = 4\n  ) %>% \n  gf_labs(\n    title = \"Plot 4C\",\n    x = \"Rotten Tomato Score\",\n    y = \"Movie Name\"\n    )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n[**What did I find Suprising?**]{.underline}\n\n\"It Follows\" shall be the horror Movie that I shall never watch, however it's suprising to see that despite it's scare score and high rotten tomato review, it didn't generate the highest spiked heart rate during the duration of the film. So Is it really the scariest?\n\n[**Experimental Graphs**]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  gf_bar(~avg_movie_heart_rate_bpm,\n         fill = ~this_film_has_at_least_one_sequel,\n         position = \"stack\"\n  ) %>%\n  gf_labs(\n    title = \"Plot 4A\",\n    x = \"Avg Heart BPM\",\n    y = \"Number of Horror Movies\"\n    ) %>%\n  # Use same name for scales to merge legends\n  gf_refine(\n    scale_color_brewer(\n      name = \"This Film has atleast 1 sequel\",\n      palette = \"Set1\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorrormovies_modified2 %>%\n  gf_bar(~highest_spike_bpm,\n         fill = ~this_film_is_a_sequel,\n         position = \"stack\"\n  ) %>%\ngf_labs(\n    title = \"Plot 4B\",\n    x = \"Highest spiked Heart Rate bpm\",\n    y = \"Number of Horror Movies\"\n    ) %>%\n  # Use same name for scales to merge legends\n  gf_refine(\n    scale_color_brewer(\n      name = \"This Film has atleast 1 sequel\",\n      palette = \"Set1\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##Scare Scores are significantly higher for films without sequels than those with sequels\nhorrormovies_modified2 %>% \n  gf_histogram(scare_score~movie,\n           fill = ~this_film_has_at_least_one_sequel,\n         bins = 20, orientation = \"y\"\n  ) %>% \ngf_labs(\n    title = \"Plot 5\",\n    x = \"Highest spiked Heart Rate bpm\",\n    y = \"Number of Horror Movies\"\n    ) %>%\n  # Use same name for scales to merge legends\n  gf_refine(\n    scale_color_brewer(\n      name = \"This Film has atleast 1 sequel\",\n      palette = \"Set1\"\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Ignoring unknown aesthetics: .\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EDA-HorrorMovies_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "EDA-HorrorMovies_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}